{"version":3,"file":"src_app_pages_camera-remote_camera-remote_module_ts.js","mappings":"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","sources":["./src/app/core/services/web-socket.service.ts","./src/app/pages/camera-remote/camera-remote-routing.module.ts","./src/app/pages/camera-remote/camera-remote.module.ts","./src/app/pages/camera-remote/drop-drap/drop-drap.component.ts","./src/app/pages/camera-remote/drop-drap/drop-drap.component.html","./src/app/pages/camera-remote/screen-management/screen-management.component.ts","./src/app/pages/camera-remote/screen-management/screen-management.component.html","./node_modules/@angular/cdk/__ivy_ngcc__/esm2015/bidi.js","./node_modules/@angular/cdk/__ivy_ngcc__/esm2015/coercion.js","./node_modules/@angular/cdk/__ivy_ngcc__/esm2015/collections.js","./node_modules/@angular/cdk/__ivy_ngcc__/esm2015/drag-drop.js","./node_modules/@angular/cdk/__ivy_ngcc__/esm2015/platform.js","./node_modules/@angular/cdk/__ivy_ngcc__/esm2015/scrolling.js"],"sourcesContent":["import {Injectable} from '@angular/core';\n// @ts-ignore\n// import * as Rx from 'rxjs/Rx';\nimport {Observable, Subject} from \"rxjs\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class WebSocketService {\n    // private subject: Rx.Subject<MessageEvent>;\n    // private subjectFE: Rx.Subject<MessageEvent>;\n    private subject: any;\n    private subjectFE: any;\n    private connected$ = new Subject<any>();\n    private connectedFE$ = new Subject<any>();\n\n    constructor() {\n    }\n\n    public connect(url: string): any {\n        if (!this.subject) {\n            this.subject = this.create(url);\n            console.log('Successfully connected: ' + url);\n            this.connected$.next(true);\n        }\n        return this.subject;\n    }\n\n    public connectFE(url: string): any {\n        if (!this.subjectFE) {\n            this.subjectFE = this.create(url);\n            console.log('connectFE Successfully connected: ' + url);\n            this.connectedFE$.next(true);\n        }\n        return this.subjectFE;\n    }\n\n    public connected(): Observable<any> {\n        return this.connected$.asObservable();\n    }\n\n    public connectedFE(): Observable<any> {\n        return this.connectedFE$.asObservable();\n    }\n\n    private create(url: string | URL): any {\n        // const ws = new WebSocket(url);\n        //\n        // const observable = Rx.Observable.create((obs: Rx.Observer<MessageEvent>) => {\n        //     ws.onmessage = obs.next.bind(obs);\n        //     ws.onerror = obs.error.bind(obs);\n        //     ws.onclose = obs.complete.bind(obs);\n        //     return ws.close.bind(ws);\n        // });\n        // const observer = {\n        //     // tslint:disable-next-line:ban-types\n        //     next: (data: Object) => {\n        //         if (ws.readyState === WebSocket.OPEN) {\n        //             ws.send(JSON.stringify(data));\n        //         }\n        //     },\n        // };\n        // return Rx.Subject.create(observer, observable);\n        return null;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ScreenManagementComponent} from './screen-management/screen-management.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ScreenManagementComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CameraRemoteRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CameraRemoteRoutingModule } from './camera-remote-routing.module';\nimport { ScreenManagementComponent } from './screen-management/screen-management.component';\nimport { DropDrapComponent } from './drop-drap/drop-drap.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport {UIModule} from '../../shared/ui/ui.module';\nimport {LayoutsModule} from '../../layouts/layouts.module';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {NgbTooltipModule} from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [ScreenManagementComponent, DropDrapComponent],\n    imports: [\n        CommonModule,\n        CameraRemoteRoutingModule,\n        DragDropModule,\n        UIModule,\n        LayoutsModule,\n        TranslateModule,\n        NgbTooltipModule\n    ]\n})\nexport class CameraRemoteModule { }\n","import {AfterViewInit, Component, ElementRef, Input, OnChanges, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {\n    CdkDrag,\n    CdkDragStart,\n    CdkDropList, CdkDropListGroup, CdkDragMove, CdkDragEnter,\n    moveItemInArray\n} from '@angular/cdk/drag-drop';\nimport {ViewportRuler} from '@angular/cdk/overlay';\nimport {Camera} from '../../../shared/model/main';\nimport {PagesService} from '../../../shared/service/pages.service';\nimport {checkMobileMode} from '../../../shared/utils/convert.util';\n\n@Component({\n    selector: 'app-drop-drap',\n    templateUrl: './drop-drap.component.html',\n    styleUrls: ['./drop-drap.component.scss']\n})\nexport class DropDrapComponent implements OnInit, AfterViewInit {\n    @ViewChild(CdkDropListGroup, {static: true}) listGroup: CdkDropListGroup<CdkDropList>;\n    @ViewChild(CdkDropList, {static: true}) placeholder: CdkDropList;\n\n    public items: Array<number> = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n    public target: CdkDropList | any;\n    public targetIndex: number;\n    public source: CdkDropList | any;\n    public sourceIndex: number;\n    public dragIndex: number;\n    public activeContainer: any;\n\n    listCamera: Array<Camera> = new Array<Camera>();\n    loading: any = [];\n    isShakeHands: any = [];\n    arrConnected: any = [];\n    editListCam: any = [];\n    mutedList: any = [];\n    turnServer = 'aivisvn.ddns.net:3478';\n\n    isMobileMode: boolean;\n    public base64tokenRes = 'Wait connect';\n\n    constructor(\n        private viewportRuler: ViewportRuler,\n        private pageService: PagesService\n    ) {\n        this.target = null;\n        this.source = null;\n        this.isMobileMode = checkMobileMode();\n    }\n\n    ngAfterViewInit() {\n        const phElement: any = this.placeholder.element.nativeElement;\n\n        phElement.style.display = 'none';\n        phElement.parentElement.removeChild(phElement);\n    }\n\n    add() {\n        this.items.push(this.items.length + 1);\n    }\n\n    shuffle() {\n        this.items.sort(() => {\n            return .5 - Math.random();\n        });\n    }\n\n    dragMoved(e: CdkDragMove) {\n        const point = this.getPointerPositionOnPage(e.event);\n\n        this.listGroup._items.forEach(dropList => {\n            if (__isInsideDropListClientRect(dropList, point.x, point.y)) {\n                this.activeContainer = dropList;\n                return;\n            }\n        });\n    }\n\n    dropListDropped(e: any) {\n        if (!this.target) {\n            return;\n        }\n\n        const phElement = this.placeholder.element.nativeElement;\n        const parent: any = phElement.parentElement;\n\n        phElement.style.display = 'none';\n\n        parent.removeChild(phElement);\n        parent.appendChild(phElement);\n        parent.insertBefore(this.source.element.nativeElement, parent.children[this.sourceIndex]);\n\n        this.target = null;\n        this.source = null;\n\n        if (this.sourceIndex != this.targetIndex) {\n            moveItemInArray(this.items, this.sourceIndex, this.targetIndex);\n        }\n    }\n\n    dropListEnterPredicate = (drag: CdkDrag, drop: CdkDropList) => {\n        if (drop == this.placeholder) {\n            return true;\n        }\n\n        if (drop != this.activeContainer) {\n            return false;\n        }\n\n        const phElement = this.placeholder.element.nativeElement;\n        const sourceElement: any = drag.dropContainer.element.nativeElement;\n        const dropElement: any = drop.element.nativeElement;\n\n        const dragIndex = __indexOf(dropElement.parentElement.children, (this.source ? phElement : sourceElement));\n        const dropIndex = __indexOf(dropElement.parentElement.children, dropElement);\n\n        if (!this.source) {\n            this.sourceIndex = dragIndex;\n            this.source = drag.dropContainer;\n\n            phElement.style.width = sourceElement.clientWidth + 'px';\n            phElement.style.height = sourceElement.clientHeight + 'px';\n\n            sourceElement.parentElement.removeChild(sourceElement);\n        }\n\n        this.targetIndex = dropIndex;\n        this.target = drop;\n\n        phElement.style.display = '';\n        dropElement.parentElement.insertBefore(phElement, (dropIndex > dragIndex\n            ? dropElement.nextSibling : dropElement));\n\n        this.placeholder.enter(drag, drag.element.nativeElement.offsetLeft, drag.element.nativeElement.offsetTop);\n        return false;\n    };\n\n    /** Determines the point of the page that was touched by the user. */\n    getPointerPositionOnPage(event: MouseEvent | TouchEvent) {\n        // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n        const point = __isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n        const scrollPosition = this.viewportRuler.getViewportScrollPosition();\n\n        return {\n            x: point.pageX - scrollPosition.left,\n            y: point.pageY - scrollPosition.top\n        };\n    }\n\n    ngOnInit(): void {\n        this.getListCamera();\n    }\n\n    getListCamera() {\n        this.pageService.fetchCameraListWithSetting().subscribe((data) => {\n            const res = data.cams || [];\n            if (res && res.length > 0) {\n                this.listCamera = res;\n                this.pageService.setData(this.listCamera);\n\n                this.listCamera.forEach(x => {\n                    this.isShakeHands.push(false);\n                    this.mutedList.push(false);\n                    this.loading.push(false);\n                    this.editListCam.push({\n                        name: x.setting ? x.setting.name : '',\n                        isEdit: false\n                    });\n                });\n            }\n        });\n    }\n\n    shakeHands(cameraObj: Camera, index: number) {\n        this.loading[index] = true;\n        this.pageService.getTurnCredential().subscribe(data => {\n            if (data) {\n                this.turnServer = data.turnServer;\n                const pcConfig = {\n                    iceServers: [\n                        {\n                            urls: 'stun:' + data.turnServer\n                        },\n                        {\n                            urls: 'turn:' + data.turnServer,\n                            username: data.username,\n                            credential: data.password,\n                        }\n                    ]\n                };\n\n                const pc = new RTCPeerConnection(pcConfig);\n                const log = (msg: any) => {\n                    // document.getElementById('log' + cameraObj.cameraId).innerHTML += msg + '<br>';\n                };\n\n                pc.ontrack = (event) => {\n                    const el = document.createElement(event.track.kind);\n                    // @ts-ignore\n                    el.srcObject = event.streams[0];\n                    // @ts-ignore\n                    el.autoplay = true;\n                    // @ts-ignore\n                    el.controls = true;\n                    // @ts-ignore\n                    el.muted = true;\n\n                    if (event.track.kind === 'audio') {\n                        // @ts-ignore\n                        el.controls = false;\n                        // @ts-ignore\n                        el.muted = true;\n                        // el.play();\n                        this.mutedList[index] = false;\n                    }\n\n                    // @ts-ignore\n                    document.getElementById('cam' + cameraObj.cameraId).appendChild(el);\n\n                    setTimeout(() => {\n                        this.setAttributeVideo('cam' + cameraObj.cameraId, 'width', '100%');\n\n                        if (!this.isMobileMode) {\n                            // @ts-ignore\n                            document.getElementById('cam' + cameraObj.cameraId).children[0].controls = false;\n                            // @ts-ignore\n                            document.getElementById('cam' + cameraObj.cameraId).children[0].style.pointerEvents = 'none';\n                        }\n\n                    }, 300);\n                };\n\n                pc.oniceconnectionstatechange = e => log(pc.iceConnectionState);\n                pc.onicecandidate = event => {\n                    if (event.candidate === null) {\n                        // console.log('base64 json', JSON.stringify(pc.localDescription));\n                        const base64token = btoa(JSON.stringify(pc.localDescription));\n\n                        this.pageService.requestStreamSignalWithTurn(cameraObj.cameraId, base64token, this.turnServer).subscribe(res => {\n                            if (res.token) {\n                                this.base64tokenRes = res.token;\n                                // console.log('base64tokenRes', this.base64tokenRes);\n\n                                // start ontrack connect\n                                pc.setRemoteDescription(new RTCSessionDescription(JSON.parse(atob(res.token))));\n\n                                if (this.arrConnected.find((x: any) => x.id === index)) {\n                                    this.arrConnected.splice(this.arrConnected.indexOf(this.arrConnected.find((x: any) => x.id === index)), 1);\n                                }\n                                this.arrConnected.push({obj: pc, id: index});\n                                this.isShakeHands[index] = true;\n                                this.loading[index] = false;\n\n                            }\n                        }, error => {\n                            this.loading[index] = false;\n                        });\n                    }\n\n                };\n\n                // Offer to receive 1 audio, and 1 video track\n                pc.addTransceiver('video', {direction: 'sendrecv'});\n                pc.addTransceiver('audio', {direction: 'sendrecv'});\n                pc.createOffer().then(d => pc.setLocalDescription(d)).catch(log);\n            }\n        }, error => {\n            this.loading[index] = false;\n        });\n    }\n\n    setAttributeVideo(id: string, attributeName: string, value: string) {\n        // @ts-ignore\n        document.getElementById(id).children[0].setAttribute(attributeName, value);\n    }\n}\n\nfunction __indexOf(collection: any, node: any) {\n    return Array.prototype.indexOf.call(collection, node);\n}\n\n/** Determines whether an event is a touch event. */\nfunction __isTouchEvent(event: MouseEvent | TouchEvent): event is TouchEvent {\n    return event.type.startsWith('touch');\n}\n\nfunction __isInsideDropListClientRect(dropList: CdkDropList, x: number, y: number) {\n    const {top, bottom, left, right} = dropList.element.nativeElement.getBoundingClientRect();\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n","<div class=\"w-100\">\n    <h1>Drag&Drop with a flex-wrap</h1>\n\n    <button (click)=\"add()\">Add</button>\n    <button (click)=\"shuffle()\">Shuffle</button><br/>\n    <ul class=\"example-list\">\n        <li *ngFor=\"let item of items\">{{ item }}</li>\n    </ul>\n\n    <div cdkDropListGroup class=\"example-container\">\n        <div (cdkDropListDropped)=\"dropListDropped($event)\" [cdkDropListEnterPredicate]=\"dropListEnterPredicate\"\n             cdkDropList></div>\n        <div (cdkDropListDropped)=\"dropListDropped($event)\" *ngFor=\"let item of listCamera; let i = index;\"\n             [cdkDropListEnterPredicate]=\"dropListEnterPredicate\" cdkDropList >\n            <div (cdkDragMoved)=\"dragMoved($event);\" cdkDrag class=\"card\">\n                <app-ui-preloader [display]=\"loading[i]\"></app-ui-preloader>\n                <div [id]=\"'cam' + item.cameraId\" class=\"card-img-top\">\n                    <div *ngIf=\"!isShakeHands[i]\" class=\"video-container\" id=\"video-container\">\n                        <video controls preload=\"metadata\" width=\"100%\"></video>\n\n                        <div class=\"play-button-wrapper\">\n                            <div (click)=\"shakeHands(item, i)\"  class=\"play-gif circlePlayBtn\" title=\"Play video\">\n                                <!-- SVG Play Button -->\n                                <svg viewBox=\"0 0 80 80\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M40 0a40 40 0 1040 40A40 40 0 0040 0zM26 61.56V18.44L64 40z\"/>\n                                </svg>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {PagesService} from '../../../shared/service/pages.service';\nimport {checkMobileMode} from '../../../shared/utils/convert.util';\nimport Swal from 'sweetalert2';\nimport {Camera} from '../../../shared/model/main';\nimport {WebSocketService} from '../../../core/services/web-socket.service';\nimport {Subject, Subscription} from 'rxjs';\nimport {AuthenticationService} from '../../../core/services/auth.service';\nimport {CameraRemoteService} from '../camera-remote.service';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {Router} from '@angular/router';\nimport {CookieService} from '../../../core/services/cookie.service';\n\n@Component({\n    selector: 'app-screen-management',\n    templateUrl: './screen-management.component.html',\n    styleUrls: ['./screen-management.component.scss']\n})\nexport class ScreenManagementComponent implements OnInit, OnDestroy {\n    videoLoadingImg = '/assets/images/camera/loading-gif.gif';\n    videoNotFoundImg = '/assets/images/camera/no-signal.gif';\n\n    listCamera = [\n        [\n            {\n                id: 0,\n                cameraId: null,\n                isShakeHands: false,\n                details: null,\n                obj: null\n            },\n            {\n                id: 1,\n                cameraId: null,\n                isShakeHands: false,\n                details: null,\n                obj: null\n            },\n            {\n                id: 2,\n                cameraId: null,\n                isShakeHands: false,\n                details: null,\n                obj: null\n            },\n            {\n                id: 3,\n                cameraId: null,\n                isShakeHands: false,\n                details: null,\n                obj: null\n            }\n        ],\n        [\n            {\n                id: 4,\n                cameraId: null,\n                isShakeHands: false,\n                details: null,\n                obj: null\n            },\n            {\n                id: 5,\n                cameraId: null,\n                isShakeHands: false,\n                details: null,\n                obj: null\n            },\n            {\n                id: 6,\n                cameraId: null,\n                isShakeHands: false,\n                details: null,\n                obj: null\n            },\n            {\n                id: 7,\n                cameraId: null,\n                isShakeHands: false,\n                details: null,\n                obj: null\n            }\n        ],\n        [\n            {\n                id: 8,\n                cameraId: null,\n                isShakeHands: false,\n                details: null,\n                obj: null\n            },\n            {\n                id: 9,\n                cameraId: null,\n                isShakeHands: false,\n                details: null,\n                obj: null\n            },\n            {\n                id: 10,\n                cameraId: null,\n                isShakeHands: false,\n                details: null,\n                obj: null\n            },\n            {\n                id: 11,\n                cameraId: null,\n                isShakeHands: false,\n                details: null,\n                obj: null\n            }\n        ],\n        [\n            {\n                id: 12,\n                cameraId: null,\n                isShakeHands: false,\n                details: null,\n                obj: null\n            },\n            {\n                id: 13,\n                cameraId: null,\n                isShakeHands: false,\n                details: null,\n                obj: null\n            },\n            {\n                id: 14,\n                cameraId: null,\n                isShakeHands: false,\n                details: null,\n                obj: null\n            },\n            {\n                id: 15,\n                cameraId: null,\n                isShakeHands: false,\n                details: null,\n                obj: null\n            }]\n    ];\n    loading = false;\n\n    turnServer = 'aivisvn.ddns.net:3478';\n    isMobileMode: boolean;\n    public base64token = 'Wait connect';\n    public base64tokenRes = 'Wait connect';\n    arrConnected: any = [];\n    listFake = [];\n    isFullScreen = false;\n\n    // Socket\n    connected: Subscription;\n    connectedFE: Subscription;\n    isConnected = false;\n    isConnectedFE = false;\n    address: any = 'wss://managerdev.ddns.net/remote-monitoring/watcher/update-online-status-ws/5?authorization=';\n    addressFE: any = 'wss://managerdev.ddns.net/remote-monitoring/watcher/frontend-rpc-server-ws/5?authorization=';\n    message: any = 'yes';\n    messages: Subject<any> | any;\n    messagesFE: Subject<any> | any;\n    messageLog: any;\n    private timerInterval: number | any;\n    private refreshCount = 0;\n    private camInfo: null;\n\n    constructor(private pageService: PagesService,\n                private websocket: WebSocketService,\n                private cameraRemoteService: CameraRemoteService,\n                private modalService: NgbModal,\n                private auth: AuthenticationService,\n                private router: Router,\n                private cookieService: CookieService\n    ) {\n        this.isMobileMode = checkMobileMode();\n        this.connected = websocket.connected().subscribe((status: boolean) => {\n            this.isConnected = status;\n            console.log('isConnected', status);\n        });\n\n        this.connectedFE = websocket.connectedFE().subscribe((status: boolean) => {\n            this.isConnectedFE = status;\n            console.log('isConnectedFE', status);\n        });\n\n        // Nomarl\n        this.messages = (\n            this.websocket.connect((this.address + this.auth.currentUser().token))\n                ?.map((response: MessageEvent): any => {\n                    console.log(response);\n                    return response.data;\n                })\n        ) as Subject<any>;\n\n        this.messageLog = this.messages?.scan((current: any, change: any) => {\n            console.log('messageLog', [...current, `RESPONSE: ${change}`]);\n            return [...current, `RESPONSE: ${change}`];\n        }, []);\n\n        // this.messages.next(`CONNECT: ${this.address}`);\n\n        this.messages?.subscribe((msg: string) => {\n            // this.received.push(msg);\n            console.log('Response from websocket: ' + msg);\n        });\n\n        // FE\n        this.messagesFE = (\n            websocket.connectFE((this.addressFE + this.auth.currentUser().token))\n                ?.map((response: MessageEvent): any => {\n                    console.log('socketFE', response);\n                    return response.data;\n                })\n        ) as Subject<any>;\n\n        this.messagesFE?.scan((current: any, change: any) => {\n            console.log('socketFE', [...current, `RESPONSE: ${change}`]);\n            console.log('socketFE change', change);\n            return [...current, `RESPONSE: ${change}`];\n        }, []);\n\n        this.messagesFE?.subscribe((msg: string) => {\n            // this.received.push(msg);\n            console.log('Response from websocket FE: ' + msg);\n            const arrMsg = msg.split('|');\n            switch (arrMsg[0]) {\n                case 'ask_receive_order':\n                    if (this.isFullScreen) {\n                        document.exitFullscreen().then(r => console.log('r', r));\n                    }\n                    this.camInfo = JSON.parse(arrMsg[1]);\n                    console.log('info order:', this.camInfo);\n                    Swal.fire({\n                        title: 'Thông báo',\n                        text: 'Bạn có muốn nhận camera này không?',\n                        type: 'warning',\n                        showCancelButton: true,\n                        confirmButtonColor: '#3085d6',\n                        cancelButtonColor: '#1abc9c',\n                        confirmButtonText: 'Húp liền',\n                        cancelButtonText: 'Chê'\n                    }).then((result) => {\n                        if (result.value) {\n                            this.send(`yes`);\n                        } else {\n                            this.send(`no`);\n                        }\n                    });\n                    break;\n                case 'add_camera_to_monitor':\n                    this.checkSlot(arrMsg[1], this.camInfo);\n                    this.shakeHands({cameraId: arrMsg[1]});\n                    this.camInfo = null;\n                    console.log(this.listCamera);\n                    break;\n                case 'stop_monitor_camera':\n                    this.disconectCamera({cameraId: arrMsg[1]});\n                    break;\n            }\n\n        });\n\n    }\n\n    ngOnInit() {\n        this.cameraRemoteService.initSupervisor().subscribe();\n        this.cameraRemoteService.wantReceiveOrder('c', 1).subscribe();\n        this.cameraRemoteService.wantReceiveOrder('d', 1).subscribe();\n        // this.toggleRightSidebar();\n        // this.checkSlot('1awq');\n        // this.shakeHands({cameraId: '1awq'});\n    }\n\n    checkSlot(camId: string, detail: any) {\n        let stop = false;\n        const arr = [0, 1, 2, 3];\n        arr.forEach(x => {\n            if (stop) {\n                return;\n            }\n            this.listCamera[x].forEach((y: any) => {\n                if (stop) {\n                    return;\n                }\n\n                if (!y.isShakeHands) {\n                    y.cameraId = camId;\n                    y.isShakeHands = true;\n                    y.details = detail;\n                    stop = true;\n                    return;\n                }\n            });\n        });\n    }\n\n    offCameraById(camId: string) {\n        let stop = false;\n        const arr = [0, 1, 2, 3];\n        arr.forEach(x => {\n            if (stop) {\n                return;\n            }\n            this.listCamera[x].forEach(y => {\n                if (stop) {\n                    return;\n                }\n\n                if (y.cameraId === camId) {\n                    y.cameraId = null;\n                    y.isShakeHands = false;\n                    y.details = null;\n                    stop = true;\n                    return;\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        clearInterval(this.timerInterval);\n        this.arrConnected.forEach((x: any) => x.obj.close());\n    }\n\n    shakeHands(cameraObj: Camera, isRefresh?: boolean) {\n        this.loading = true;\n        this.pageService.getTurnCredential().subscribe((data: any) => {\n            if (data) {\n                // data.exception === 'Unauthorized'\n                if (data.message === 'timeout' || data === 'Error: Response Timeout') {\n                    this.disconectCamera(cameraObj);\n                    return;\n                }\n                this.turnServer = data.turnServer;\n                const pcConfig = {\n                    iceServers: [\n                        {\n                            urls: 'stun:' + data.turnServer\n                        },\n                        {\n                            urls: 'turn:' + data.turnServer,\n                            username: data.username,\n                            credential: data.password,\n                        }\n                    ]\n                };\n\n                const pc = new RTCPeerConnection(pcConfig);\n                const log = (msg: string) => {\n\n                    // document.getElementById('log' + cameraObj.cameraId).innerHTML += msg + '<br>';\n                    const arr = [];\n                    arr.push([cameraObj.cameraId, msg, this.base64token]);\n                    console.table(arr);\n\n                    if (msg === 'disconnected') {\n                        // this.retryConnect(cameraObj, i, index);\n                    }\n                };\n\n                pc.ontrack = (event) => {\n                    const el = document.createElement(event.track.kind);\n                    // @ts-ignore\n                    el.srcObject = event.streams[0];\n                    // @ts-ignore\n                    el.autoplay = true;\n                    // @ts-ignore\n                    el.controls = true;\n                    // @ts-ignore\n                    el.muted = true;\n\n                    if (event.track.kind === 'audio') {\n                        // @ts-ignore\n                        el.controls = false;\n                        // @ts-ignore\n                        el.muted = true;\n                        // el.play();\n                    }\n\n                    // @ts-ignore\n                    document.getElementById(cameraObj.cameraId).appendChild(el);\n\n                    setTimeout(() => {\n                        this.setAttributeVideo(cameraObj.cameraId, 'width', '100%');\n\n                        if (!this.isMobileMode) {\n                            // @ts-ignore\n                            document.getElementById(cameraObj.cameraId).children[0].controls = false;\n                            // @ts-ignore\n                            document.getElementById(cameraObj.cameraId).children[0].style.pointerEvents = 'none';\n                        }\n\n                    }, 800);\n                };\n\n                pc.oniceconnectionstatechange = e => log(pc.iceConnectionState);\n                pc.onicecandidate = event => {\n                    if (event.candidate === null) {\n                        // console.log('base64 json', JSON.stringify(pc.localDescription));\n                        this.base64token = btoa(JSON.stringify(pc.localDescription));\n\n                        this.pageService.requestStreamSignalWithTurnWatcher(cameraObj.cameraId, this.base64token, this.turnServer)\n                            .subscribe((res: { token: string; }) => {\n                                if (res.token) {\n                                    if (isRefresh) {\n                                        this.disconectCamera(cameraObj);\n                                        this.refreshCount = 0;\n                                    }\n\n                                    this.base64tokenRes = res.token;\n                                    // console.log('base64tokenRes', this.base64tokenRes);\n\n                                    // start ontrack connect\n                                    pc.setRemoteDescription(new RTCSessionDescription(JSON.parse(atob(res.token))));\n\n                                    if (this.arrConnected.find((x: any) => x.id === cameraObj.cameraId)) {\n                                        // @ts-ignore\n                                        this.arrConnected.splice(this.arrConnected.indexOf(this.arrConnected.find(x => x.id === cameraObj.cameraId)), 1);\n                                    }\n                                    // this.arrConnected.push({obj: pc, id: i.toString() + index.toString()});\n                                    // @ts-ignore\n                                    this.arrConnected.push({obj: pc, id: cameraObj.cameraId, connected: true});\n                                    // this.isShakeHands[i] = true;\n                                    this.loading = false;\n                                    clearInterval(this.timerInterval);\n                                }\n                            }, (error: any) => {\n                                this.offCameraById(cameraObj.cameraId);\n                                // @ts-ignore\n                                this.arrConnected.push({obj: pc, id: cameraObj.cameraId, connected: false});\n                                this.loading = false;\n                                // data.exception === 'Unauthorized'\n                                // if (error === 'timeout' || error === 'Error: Response Timeout') {\n                                //     // this.retryConnect(cameraObj, i, index);\n                                //     this.disconectCamera(cameraObj, i, index);\n                                //     return;\n                                // }\n                            });\n                    }\n\n                };\n\n                // Offer to receive 1 audio, and 1 video track\n                pc.addTransceiver('video', {direction: 'sendrecv'});\n                pc.addTransceiver('audio', {direction: 'sendrecv'});\n                pc.createOffer().then(d => pc.setLocalDescription(d)).catch(log);\n            }\n        }, (error: any) => {\n            this.loading = false;\n\n            // if (error === 'timeout' || error === 'Error: Response Timeout') {\n            //     this.disconectCamera(cameraObj, i, index);\n            //     return;\n            // }\n        });\n    }\n\n\n    retryConnect(cameraObj: Camera, i: number) {\n        this.timerInterval = setInterval(() => {\n            if (this.refreshCount === 3) {\n                clearInterval(this.timerInterval);\n            }\n            this.refreshCamera(cameraObj, i);\n            this.refreshCount++;\n        }, 10000);\n    }\n\n    refreshCamera(cameraObj: Camera, i: number) {\n        // this.disconectCamera(cameraObj, i, index);\n        this.shakeHands(cameraObj, true);\n    }\n\n    disconectCamera(cameraObj: Camera) {\n        const elem = document.getElementById(cameraObj.cameraId);\n\n        if (elem) {\n            // console.log(elem.childNodes);\n            this.arrConnected.find((x: { id: string; }) => x.id === cameraObj.cameraId).obj.close();\n            this.offCameraById(cameraObj.cameraId);\n            elem.removeChild(elem.childNodes[1]);\n            elem.removeChild(elem.childNodes[1]);\n        }\n\n    }\n\n    setAttributeVideo(id: string, attributeName: string, value: string) {\n        // @ts-ignore\n        document.getElementById(id).children[0].setAttribute(attributeName, value);\n    }\n\n    onClickShowFullScreen(ele: any, evt?: any) {\n        if (this.isFullScreen) {\n            this.isFullScreen = false;\n            // document.exitFullscreen().then(r => console.log('r', r));\n        } else {\n            evt.preventDefault();\n            this.requestFullscreen(ele);\n            setTimeout(() => {\n                this.arrConnected.forEach((x: { cameraId: string; }) => this.setAttributeVideo(x.cameraId, 'width', '100%'));\n            }, 500);\n        }\n    }\n\n    requestFullscreen(ele: HTMLElement & { mozRequestFullScreen(): Promise<void>; webkitRequestFullscreen(): Promise<void>; msRequestFullscreen(): Promise<void>; }) {\n        this.isFullScreen = true;\n        // @ts-ignore\n        document.getElementById('cameraMonitor').classList.add('height-100');\n        const docEl = ele as HTMLElement & {\n            mozRequestFullScreen(): Promise<void>;\n            webkitRequestFullscreen(): Promise<void>;\n            msRequestFullscreen(): Promise<void>;\n        };\n        if (docEl.requestFullscreen) {\n            docEl.requestFullscreen();\n        } else if (docEl.mozRequestFullScreen) {\n            /* Firefox */\n            docEl.mozRequestFullScreen();\n        } else if (docEl.webkitRequestFullscreen) {\n            /* Chrome, Safari and Opera */\n            docEl.webkitRequestFullscreen();\n        } else if (docEl.msRequestFullscreen) {\n            /* IE/Edge */\n            docEl.msRequestFullscreen();\n        }\n    }\n\n    send(rep: any) {\n        console.log('this.messageLog', this.messageLog);\n        // this.messageLog = [...this.messageLog, 'SENT: ' + this.message];\n        this.messagesFE.next(rep);\n    }\n\n    // onMessageKeyup(event) {\n    //     if (event.keyCode === 13) {\n    //         this.send();\n    //     }\n    // }\n\n    initSession() {\n        this.cameraRemoteService.initSession().subscribe();\n    }\n\n    public toggleRightSidebar() {\n        document.body.classList.toggle('right-bar-enabled');\n    }\n\n    order() {\n        Swal.fire({\n            title: 'Submit your cameraId order',\n            input: 'text',\n            inputAttributes: {\n                autocapitalize: 'off'\n            },\n            showCancelButton: true,\n            confirmButtonText: 'Order',\n            showLoaderOnConfirm: true,\n            preConfirm: (camId) => {\n                return this.cameraRemoteService.order(camId).subscribe();\n            },\n            allowOutsideClick: () => !Swal.isLoading()\n        }).then((result) => {\n            // if (result.isConfirmed) {\n            //     Swal.fire({\n            //         title: `${result.value.login}'s avatar`,\n            //         imageUrl: result.value.avatar_url\n            //     })\n            // }\n        });\n    }\n\n    viewInfo(camera: any) {\n        const url = this.router.serializeUrl(\n            this.router.createUrlTree([`/history-stream`])\n        );\n\n\n        // camera?.details\n        this.cookieService.setCookie('HIS_STREAM', JSON.stringify({cameraId: '1awq'}), (1 / 24 / 60));\n\n        window.open(url, '_blank');\n    }\n}\n","<div class=\"container-fluid\">\n    <div class=\"toggle-sticky\">\n        <button (click)=\"toggleRightSidebar()\"\n                class=\"btn btn-sm btn-primary right-bar-toggle toggle-sticky-btn\">\n            <i class=\"fe-settings mr-1\"></i> {{'config' | translate}}\n        </button>\n    </div>\n\n    <app-ui-preloader [display]=\"loading\"></app-ui-preloader>\n\n    <div class=\"row mt-2\">\n        <div class=\"col-12\">\n\n            <button (click)=\"order()\" class=\"btn btn-primary\">\n                Order\n            </button>\n\n            <!--                        <button class=\"btn btn-primary\" (click)=\"send()\">-->\n            <!--                            Sent message-->\n            <!--                        </button>-->\n\n            <button (click)=\"initSession()\" class=\"btn btn-primary\">\n                Start\n            </button>\n\n            <button (click)=\"onClickShowFullScreen(eleScreen, $event)\" class=\"float-right btn btn-primary\">Toàn màn\n                hình\n            </button>\n        </div>\n    </div>\n\n    <div #eleScreen class=\"row mt-3\">\n        <div class=\"col-12 p-0 m-0\" id=\"cameraMonitor\">\n            <div *ngFor=\"let row of [0, 1, 2, 3]\" class=\"card-group\">\n                <div *ngFor=\"let item of listCamera[row]; let i = index;\" class=\"card p-0 m-0\">\n                    <div [id]=\"item.cameraId\" class=\"card-img-top\">\n                        <div *ngIf=\"!item.isShakeHands\" class=\"video-container\">\n<!--                            <video *ngIf=\"!(row === 3 && i === 3)\" controls height=\"100%\" preload=\"metadata\" width=\"100%\" autoplay>-->\n<!--                                <source src=\"https://github.com/stefanedberg/angular-animate-video/blob/main/src/assets/small.mp4?raw=true\" type=\"video/mp4\" />-->\n<!--                            </video>-->\n                            <video *ngIf=\"!(row === 3 && i === 3)\" controls height=\"100%\" preload=\"metadata\" width=\"100%\"></video>\n                            <!--                            <img [src]=\"videoNotFoundImg\" class=\"img-fluid\">-->\n                            <app-webcam *ngIf=\"row === 3 && i === 3\"></app-webcam>\n                        </div>\n                    </div>\n                    <!--                    *ngIf=\"item.isShakeHands\"-->\n                    <div class=\"elem-float\">\n                        <i (click)=\"viewInfo(item)\" class=\"fas fa-info-circle\" [ngbTooltip]=\"item?.details | json\" placement=\"right\"></i>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<app-rightsidebar [mode]=\"'REMOTE'\"></app-rightsidebar>\n\n<ng-template #INFO role=\"document\" let-modal=\"close\">\n    <div class=\"modal-header bg-primary\">\n        <h4 class=\"modal-title\">Modal Heading</h4>\n        <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"modal('Cross click')\">×</button>\n    </div>\n    <div class=\"modal-body\">\n        <h5>Text in a modal</h5>\n        <p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\n        <hr>\n        <h5>Overflowing text to show scroll behavior</h5>\n        <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\n            egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>\n        <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel\n            augue laoreet rutrum faucibus dolor auctor.</p>\n    </div>\n<!--    <div class=\"modal-footer\">-->\n<!--        <button type=\"button\" class=\"btn btn-light waves-effect\" (click)=\"modal('Cross click')\"-->\n<!--                (click)=\"modal('Cross click')\">Close</button>-->\n<!--        <button type=\"button\" class=\"btn btn-primary waves-effect waves-light\">Save changes</button>-->\n<!--    </div>-->\n</ng-template>\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOCUMENT } from '@angular/common';\nimport { inject, InjectionToken, EventEmitter, Inject, Injectable, Optional, Directive, Output, Input, NgModule, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    /**\n     * @param {?=} _document\n     */\n    constructor(_document) {\n        /**\n         * The current 'ltr' or 'rtl' value.\n         */\n        this.value = 'ltr';\n        /**\n         * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n         */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            /** @type {?} */\n            const bodyDir = _document.body ? _document.body.dir : null;\n            /** @type {?} */\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            /** @type {?} */\n            const value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.ɵfac = function Directionality_Factory(t) { return new (t || Directionality)(ɵngcc0.ɵɵinject(DIR_DOCUMENT, 8)); };\nDirectionality.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: Directionality, factory: Directionality.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nDirectionality.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n];\n/** @nocollapse */ Directionality.ngInjectableDef = ɵɵdefineInjectable({ factory: function Directionality_Factory() { return new Directionality(ɵɵinject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Directionality, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DIR_DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /**\n         * Normalized direction that accounts for invalid/unsupported values.\n         */\n        this._dir = 'ltr';\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Event emitted when the direction changes.\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get dir() { return this._dir; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dir(value) {\n        /** @type {?} */\n        const old = this._dir;\n        /** @type {?} */\n        const normalizedValue = value ? value.toLowerCase() : value;\n        this._rawDir = value;\n        this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /**\n     * Current layout direction of the element.\n     * @return {?}\n     */\n    get value() { return this.dir; }\n    /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.ɵfac = function Dir_Factory(t) { return new (t || Dir)(); };\nDir.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: Dir, selectors: [[\"\", \"dir\", \"\"]], hostVars: 1, hostBindings: function Dir_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"dir\", ctx._rawDir);\n    } }, inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, exportAs: [\"dir\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: Directionality, useExisting: Dir }])] });\nDir.propDecorators = {\n    change: [{ type: Output, args: ['dirChange',] }],\n    dir: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Dir, [{\n        type: Directive,\n        args: [{\n                selector: '[dir]',\n                providers: [{ provide: Directionality, useExisting: Dir }],\n                host: { '[attr.dir]': '_rawDir' },\n                exportAs: 'dir'\n            }]\n    }], function () { return []; }, { change: [{\n            type: Output,\n            args: ['dirChange']\n        }], dir: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass BidiModule {\n}\nBidiModule.ɵfac = function BidiModule_Factory(t) { return new (t || BidiModule)(); };\nBidiModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: BidiModule });\nBidiModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BidiModule, [{\n        type: NgModule,\n        args: [{\n                exports: [Dir],\n                declarations: [Dir]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BidiModule, { declarations: [Dir], exports: [Dir] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Directionality, DIR_DOCUMENT, Dir, BidiModule, DIR_DOCUMENT_FACTORY as ɵa };\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Coerces a data-bound value (typically a string) to a boolean.\n * @param {?} value\n * @return {?}\n */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} value\n * @param {?=} fallbackValue\n * @return {?}\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * \\@docs-private\n * @param {?} value\n * @return {?}\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat((/** @type {?} */ (value)))) && !isNaN(Number(value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Wraps the provided value in an array, unless the provided value is an array.\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Coerces a value to a CSS pixel value.\n * @param {?} value\n * @return {?}\n */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n * @template T\n * @param {?} elementOrRef\n * @return {?}\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { coerceBooleanProperty, coerceNumberProperty, _isNumberValue, coerceArray, coerceCssPixelValue, coerceElement };\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Observable, of, Subject } from 'rxjs';\nimport { Injectable, ɵɵdefineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @abstract\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nclass DataSource {\n}\n/**\n * Checks whether an object is a data source.\n * @param {?} value\n * @return {?}\n */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * DataSource wrapper for a native array.\n * @template T\n */\nclass ArrayDataSource extends DataSource {\n    /**\n     * @param {?} _data\n     */\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    /**\n     * @return {?}\n     */\n    connect() {\n        return this._data instanceof Observable ? this._data : of(this._data);\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n * @template T\n */\nclass SelectionModel {\n    /**\n     * @param {?=} _multiple\n     * @param {?=} initiallySelectedValues\n     * @param {?=} _emitChanges\n     */\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /**\n         * Currently-selected values.\n         */\n        this._selection = new Set();\n        /**\n         * Keeps track of the deselected options that haven't been emitted by the change event.\n         */\n        this._deselectedToEmit = [];\n        /**\n         * Keeps track of the selected options that haven't been emitted by the change event.\n         */\n        this._selectedToEmit = [];\n        /**\n         * Event emitted when the value has changed.\n         */\n        this.changed = new Subject();\n        /**\n         * Event emitted when the value has changed.\n         * @deprecated Use `changed` instead.\n         * \\@breaking-change 8.0.0 To be changed to `changed`\n         */\n        this.onChange = this.changed;\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach((/**\n                 * @param {?} value\n                 * @return {?}\n                 */\n                value => this._markSelected(value)));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /**\n     * Selected values.\n     * @return {?}\n     */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._markSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._unmarkSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param {?} value\n     * @return {?}\n     */\n    toggle(value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @return {?}\n     */\n    clear() {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    }\n    /**\n     * Determines whether a value is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    isSelected(value) {\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     * @return {?}\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     * @return {?}\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     * @param {?=} predicate\n     * @return {?}\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            (/** @type {?} */ (this._selected)).sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     * @return {?}\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /**\n     * Emits a change event and clears the records of selected and deselected values.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /**\n     * Selects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Deselects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Clears out the selected values.\n     * @private\n     * @return {?}\n     */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => this._unmarkSelected(value)));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param {?} id ID of the item.\n     * @param {?} name Name of the item.\n     * @return {?}\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @param {?} listener\n     * @return {?} Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return (/**\n         * @return {?}\n         */\n        () => {\n            this._listeners = this._listeners.filter((/**\n             * @param {?} registered\n             * @return {?}\n             */\n            (registered) => {\n                return listener !== registered;\n            }));\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n}\nUniqueSelectionDispatcher.ɵfac = function UniqueSelectionDispatcher_Factory(t) { return new (t || UniqueSelectionDispatcher)(); };\nUniqueSelectionDispatcher.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: UniqueSelectionDispatcher, factory: UniqueSelectionDispatcher.ɵfac, providedIn: 'root' });\n/** @nocollapse */ UniqueSelectionDispatcher.ngInjectableDef = ɵɵdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UniqueSelectionDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { UniqueSelectionDispatcher, ArrayDataSource, isDataSource, DataSource, getMultipleValuesInSingleSelectionError, SelectionModel };\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { normalizePassiveListenerOptions, _supportsShadowDom } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceNumberProperty, coerceArray } from '@angular/cdk/coercion';\nimport { Subscription, Subject, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { startWith, takeUntil, take, map, switchMap, tap } from 'rxjs/operators';\nimport { Injectable, NgZone, Inject, InjectionToken, NgModule, ContentChildren, ElementRef, EventEmitter, forwardRef, Input, Output, Optional, Directive, ChangeDetectorRef, SkipSelf, ContentChild, ViewContainerRef, isDevMode, TemplateRef, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * \\@docs-private\n * @param {?} dest\n * @param {?} source\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nfunction extendStyles(dest, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = (/** @type {?} */ (source[key]));\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * \\@docs-private\n * @param {?} element Element on which to toggle the drag interactions.\n * @param {?} enable Whether the drag interactions should be enabled.\n * @return {?}\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    /** @type {?} */\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        touchAction: enable ? '' : 'none',\n        webkitUserDrag: enable ? '' : 'none',\n        webkitTapHighlightColor: enable ? '' : 'transparent',\n        userSelect: userSelect,\n        msUserSelect: userSelect,\n        webkitUserSelect: userSelect,\n        MozUserSelect: userSelect\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Parses a CSS time value to milliseconds.\n * @param {?} value\n * @return {?}\n */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    /** @type {?} */\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/**\n * Gets the transform transition duration, including the delay, of an element in milliseconds.\n * @param {?} element\n * @return {?}\n */\nfunction getTransformTransitionDurationInMs(element) {\n    /** @type {?} */\n    const computedStyle = getComputedStyle(element);\n    /** @type {?} */\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    /** @type {?} */\n    const property = transitionedProperties.find((/**\n     * @param {?} prop\n     * @return {?}\n     */\n    prop => prop === 'transform' || prop === 'all'));\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    /** @type {?} */\n    const propertyIndex = transitionedProperties.indexOf(property);\n    /** @type {?} */\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    /** @type {?} */\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/**\n * Parses out multiple values from a computed style into an array.\n * @param {?} computedStyle\n * @param {?} name\n * @return {?}\n */\nfunction parseCssPropertyValue(computedStyle, name) {\n    /** @type {?} */\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map((/**\n     * @param {?} part\n     * @return {?}\n     */\n    part => part.trim()));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options that can be used to bind a passive event listener.\n * @type {?}\n */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Options that can be used to bind an active event listener.\n * @type {?}\n */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n * @type {?}\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n * \\@docs-private\n * @template T\n */\nclass DragRef {\n    /**\n     * @param {?} element\n     * @param {?} _config\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?} _dragDropRegistry\n     */\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /**\n         * CSS `transform` that is applied to the element while it's being dragged.\n         */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Emits when the item is being moved.\n         */\n        this._moveEvents = new Subject();\n        /**\n         * Subscription to pointer movement events.\n         */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the event that is dispatched when the user lifts their pointer.\n         */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the viewport being scrolled.\n         */\n        this._scrollSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the viewport being resized.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Cached reference to the boundary element.\n         */\n        this._boundaryElement = null;\n        /**\n         * Whether the native dragging interactions have been enabled on the root element.\n         */\n        this._nativeInteractionsEnabled = true;\n        /**\n         * Elements that can be used to drag the draggable item.\n         */\n        this._handles = [];\n        /**\n         * Registered handles that are currently disabled.\n         */\n        this._disabledHandles = new Set();\n        /**\n         * Layout direction of the item.\n         */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /**\n         * Emits as the drag sequence is being prepared.\n         */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new Subject();\n        /**\n         * Emits when the user has released a drag item, before any animations have started.\n         */\n        this.released = new Subject();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new Subject();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents.asObservable();\n        /**\n         * Handler for the `mousedown`/`touchstart` events.\n         */\n        this._pointerDown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                /** @type {?} */\n                const targetHandle = this._handles.find((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => {\n                    /** @type {?} */\n                    const target = event.target;\n                    return !!target && (target === handle || handle.contains((/** @type {?} */ (target))));\n                }));\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        });\n        /**\n         * Handler that is invoked when the user moves their pointer after they've initiated a drag.\n         */\n        this._pointerMove = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (!this._hasStartedDragging) {\n                /** @type {?} */\n                const pointerPosition = this._getPointerPositionOnPage(event);\n                /** @type {?} */\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                /** @type {?} */\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                /** @type {?} */\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    /** @type {?} */\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + (this.dragStartDelay || 0);\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!this._dropContainer || !this._dropContainer.isDragging()) {\n                        this._hasStartedDragging = true;\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this._startDragSequence(event)));\n                    }\n                }\n                return;\n            }\n            // We only need the preview dimensions if we have a boundary element.\n            if (this._boundaryElement) {\n                // Cache the preview element rect if we haven't cached it already or if\n                // we cached it too early before the element dimensions were computed.\n                if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n                    this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n                }\n            }\n            /** @type {?} */\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(event);\n            this._hasMoved = true;\n            event.preventDefault();\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition);\n            }\n            else {\n                /** @type {?} */\n                const activeTransform = this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n                // Apply transform as attribute if dragging and svg element to work for IE\n                if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n                    /** @type {?} */\n                    const appliedTransform = `translate(${activeTransform.x} ${activeTransform.y})`;\n                    this._rootElement.setAttribute('transform', appliedTransform);\n                }\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta\n                    });\n                }));\n            }\n        });\n        /**\n         * Handler that is invoked when the user lifts their pointer up, after initiating a drag.\n         */\n        this._pointerUp = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._endDragSequence(event);\n        });\n        this.withRootElement(element);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /**\n     * Whether starting to drag this element is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Registers the handles that can be used to drag the element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} handles\n     * @return {THIS}\n     */\n    withHandles(handles) {\n        (/** @type {?} */ (this))._handles = handles.map((/**\n         * @param {?} handle\n         * @return {?}\n         */\n        handle => coerceElement(handle)));\n        (/** @type {?} */ (this))._handles.forEach((/**\n         * @param {?} handle\n         * @return {?}\n         */\n        handle => toggleNativeDragInteractions(handle, false)));\n        (/** @type {?} */ (this))._toggleNativeDragInteractions();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the preview.\n     * @return {THIS}\n     */\n    withPreviewTemplate(template) {\n        (/** @type {?} */ (this))._previewTemplate = template;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the placeholder.\n     * @return {THIS}\n     */\n    withPlaceholderTemplate(template) {\n        (/** @type {?} */ (this))._placeholderTemplate = template;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} rootElement\n     * @return {THIS}\n     */\n    withRootElement(rootElement) {\n        /** @type {?} */\n        const element = coerceElement(rootElement);\n        if (element !== (/** @type {?} */ (this))._rootElement) {\n            if ((/** @type {?} */ (this))._rootElement) {\n                (/** @type {?} */ (this))._removeRootElementListeners((/** @type {?} */ (this))._rootElement);\n            }\n            element.addEventListener('mousedown', (/** @type {?} */ (this))._pointerDown, activeEventListenerOptions);\n            element.addEventListener('touchstart', (/** @type {?} */ (this))._pointerDown, passiveEventListenerOptions);\n            (/** @type {?} */ (this))._initialTransform = undefined;\n            (/** @type {?} */ (this))._rootElement = element;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} boundaryElement\n     * @return {THIS}\n     */\n    withBoundaryElement(boundaryElement) {\n        (/** @type {?} */ (this))._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        (/** @type {?} */ (this))._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            (/** @type {?} */ (this))._resizeSubscription = (/** @type {?} */ (this))._viewportRuler\n                .change(10)\n                .subscribe((/**\n             * @return {?}\n             */\n            () => (/** @type {?} */ (this))._containInsideBoundaryOnResize()));\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Removes the dragging functionality from the DOM element.\n     * @return {?}\n     */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            removeElement(this._rootElement);\n        }\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._boundaryElement = this._rootElement = this._placeholderTemplate =\n            this._previewTemplate = this._nextSibling = (/** @type {?} */ (null));\n    }\n    /**\n     * Checks whether the element is currently being dragged.\n     * @return {?}\n     */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param {?} handle Handle element that should be disabled.\n     * @return {?}\n     */\n    disableHandle(handle) {\n        if (this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param {?} handle Handle element to be enabled.\n     * @return {?}\n     */\n    enableHandle(handle) {\n        this._disabledHandles.delete(handle);\n    }\n    /**\n     * Sets the layout direction of the draggable item.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    withDirection(direction) {\n        (/** @type {?} */ (this))._direction = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the container that the item is part of.\n     * @param {?} container\n     * @return {?}\n     */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     * @return {?}\n     */\n    getFreeDragPosition() {\n        /** @type {?} */\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} value New position to be set.\n     * @return {THIS}\n     */\n    setFreeDragPosition(value) {\n        (/** @type {?} */ (this))._activeTransform = { x: 0, y: 0 };\n        (/** @type {?} */ (this))._passiveTransform.x = value.x;\n        (/** @type {?} */ (this))._passiveTransform.y = value.y;\n        if (!(/** @type {?} */ (this))._dropContainer) {\n            (/** @type {?} */ (this))._applyRootElementTransform(value.x, value.y);\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Updates the item's sort order based on the last-known pointer position.\n     * @return {?}\n     */\n    _sortFromLastPointerPosition() {\n        /** @type {?} */\n        const position = this._pointerPositionAtLastDirectionChange;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(position);\n        }\n    }\n    /**\n     * Unsubscribes from the global subscriptions.\n     * @private\n     * @return {?}\n     */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /**\n     * Destroys the preview element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    _destroyPreview() {\n        if (this._preview) {\n            removeElement(this._preview);\n        }\n        if (this._previewRef) {\n            this._previewRef.destroy();\n        }\n        this._preview = this._previewRef = (/** @type {?} */ (null));\n    }\n    /**\n     * Destroys the placeholder element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    _destroyPlaceholder() {\n        if (this._placeholder) {\n            removeElement(this._placeholder);\n        }\n        if (this._placeholderRef) {\n            this._placeholderRef.destroy();\n        }\n        this._placeholder = this._placeholderRef = (/** @type {?} */ (null));\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @private\n     * @param {?} event Browser event object that ended the sequence.\n     * @return {?}\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then((/**\n             * @return {?}\n             */\n            () => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            }));\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(this._getPointerPositionOnPage(event))\n                });\n            }));\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /**\n     * Starts the dragging sequence.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _startDragSequence(event) {\n        // Emit the event on the item before the one on the container.\n        this.started.next({ source: this });\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        if (this._dropContainer) {\n            /** @type {?} */\n            const element = this._rootElement;\n            // Grab the `nextSibling` before the preview and placeholder\n            // have been created so we don't get the preview by accident.\n            this._nextSibling = element.nextSibling;\n            /** @type {?} */\n            const preview = this._preview = this._createPreviewElement();\n            /** @type {?} */\n            const placeholder = this._placeholder = this._createPlaceholderElement();\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            element.style.display = 'none';\n            this._document.body.appendChild((/** @type {?} */ (element.parentNode)).replaceChild(placeholder, element));\n            getPreviewInsertionPoint(this._document).appendChild(preview);\n            this._dropContainer.start();\n        }\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @private\n     * @param {?} referenceElement Element that started the drag sequence.\n     * @param {?} event Browser event object that started the sequence.\n     * @return {?}\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Always stop propagation for the event that initializes\n        // the dragging sequence, in order to prevent it from potentially\n        // starting another sequence for a draggable parent somewhere up the DOM tree.\n        event.stopPropagation();\n        /** @type {?} */\n        const isDragging = this.isDragging();\n        /** @type {?} */\n        const isTouchSequence = isTouchEvent(event);\n        /** @type {?} */\n        const isAuxiliaryMouseButton = !isTouchSequence && ((/** @type {?} */ (event))).button !== 0;\n        /** @type {?} */\n        const rootElement = this._rootElement;\n        /** @type {?} */\n        const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (event.target && ((/** @type {?} */ (event.target))).draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor;\n            rootElement.style.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        this._initialContainer = (/** @type {?} */ (this._dropContainer));\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry.scroll.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        }));\n        if (this._boundaryElement) {\n            this._boundaryRect = this._boundaryElement.getBoundingClientRect();\n        }\n        // If we have a custom preview template, the element won't be visible anyway so we avoid the\n        // extra `getBoundingClientRect` calls and just move the preview next to the cursor.\n        this._pickupPositionInElement = this._previewTemplate && this._previewTemplate.template ?\n            { x: 0, y: 0 } :\n            this._getPointerPositionInElement(referenceElement, event);\n        /** @type {?} */\n        const pointerPosition = this._pickupPositionOnPage = this._getPointerPositionOnPage(event);\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /**\n     * Cleans up the DOM artifacts that were added to facilitate the element being dragged.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        this._rootElement.style.display = '';\n        if (this._nextSibling) {\n            (/** @type {?} */ (this._nextSibling.parentNode)).insertBefore(this._rootElement, this._nextSibling);\n        }\n        else {\n            coerceElement(this._initialContainer.element).appendChild(this._rootElement);\n        }\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const container = (/** @type {?} */ (this._dropContainer));\n            /** @type {?} */\n            const currentIndex = container.getItemIndex(this);\n            /** @type {?} */\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            /** @type {?} */\n            const distance = this._getDragDistance(this._getPointerPositionOnPage(event));\n            /** @type {?} */\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialContainer.getItemIndex(this),\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance\n            });\n            container.drop(this, currentIndex, this._initialContainer, isPointerOverContainer, distance);\n            this._dropContainer = this._initialContainer;\n        }));\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     * @private\n     * @param {?} __0\n     * @return {?}\n     */\n    _updateActiveDropContainer({ x, y }) {\n        // Drop container that draggable has been moved into.\n        /** @type {?} */\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer && this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: (/** @type {?} */ (this._dropContainer)) });\n                (/** @type {?} */ (this._dropContainer)).exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = (/** @type {?} */ (newContainer));\n                this._dropContainer.enter(this, x, y);\n                this.entered.next({\n                    item: this,\n                    container: (/** @type {?} */ (newContainer)),\n                    currentIndex: (/** @type {?} */ (newContainer)).getItemIndex(this)\n                });\n            }));\n        }\n        (/** @type {?} */ (this._dropContainer))._startScrollingIfNecessary(x, y);\n        (/** @type {?} */ (this._dropContainer))._sortItem(this, x, y, this._pointerDirectionDelta);\n        this._preview.style.transform =\n            getTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     * @private\n     * @return {?}\n     */\n    _createPreviewElement() {\n        /** @type {?} */\n        const previewConfig = this._previewTemplate;\n        /** @type {?} */\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        /** @type {?} */\n        let preview;\n        if (previewTemplate) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (previewConfig)).viewContainer.createEmbeddedView(previewTemplate, (/** @type {?} */ (previewConfig)).context);\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            preview.style.transform =\n                getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n        }\n        else {\n            /** @type {?} */\n            const element = this._rootElement;\n            /** @type {?} */\n            const elementRect = element.getBoundingClientRect();\n            preview = deepCloneNode(element);\n            preview.style.width = `${elementRect.width}px`;\n            preview.style.height = `${elementRect.height}px`;\n            preview.style.transform = getTransform(elementRect.left, elementRect.top);\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            pointerEvents: 'none',\n            // We have to reset the margin, because can throw off positioning relative to the viewport.\n            margin: '0',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            zIndex: '1000'\n        });\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @private\n     * @return {?} Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        /** @type {?} */\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._preview.style.transform = getTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        /** @type {?} */\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return new Promise((/**\n             * @param {?} resolve\n             * @return {?}\n             */\n            resolve => {\n                /** @type {?} */\n                const handler = (/** @type {?} */ (((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    if (!event || (event.target === this._preview && event.propertyName === 'transform')) {\n                        this._preview.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                }))));\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                /** @type {?} */\n                const timeout = setTimeout((/** @type {?} */ (handler)), duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            }));\n        }));\n    }\n    /**\n     * Creates an element that will be shown instead of the current element while dragging.\n     * @private\n     * @return {?}\n     */\n    _createPlaceholderElement() {\n        /** @type {?} */\n        const placeholderConfig = this._placeholderTemplate;\n        /** @type {?} */\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        /** @type {?} */\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = (/** @type {?} */ (placeholderConfig)).viewContainer.createEmbeddedView(placeholderTemplate, (/** @type {?} */ (placeholderConfig)).context);\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @private\n     * @param {?} referenceElement Element that initiated the dragging.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    _getPointerPositionInElement(referenceElement, event) {\n        /** @type {?} */\n        const elementRect = this._rootElement.getBoundingClientRect();\n        /** @type {?} */\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        /** @type {?} */\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        /** @type {?} */\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        /** @type {?} */\n        const x = point.pageX - referenceRect.left - this._scrollPosition.left;\n        /** @type {?} */\n        const y = point.pageY - referenceRect.top - this._scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y\n        };\n    }\n    /**\n     * Determines the point of the page that was touched by the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getPointerPositionOnPage(event) {\n        // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n        /** @type {?} */\n        const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n        return {\n            x: point.pageX - this._scrollPosition.left,\n            y: point.pageY - this._scrollPosition.top\n        };\n    }\n    /**\n     * Gets the pointer position on the page, accounting for any position constraints.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getConstrainedPointerPosition(event) {\n        /** @type {?} */\n        const point = this._getPointerPositionOnPage(event);\n        /** @type {?} */\n        const constrainedPoint = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        /** @type {?} */\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            constrainedPoint.y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            constrainedPoint.x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            /** @type {?} */\n            const boundaryRect = this._boundaryRect;\n            /** @type {?} */\n            const previewRect = (/** @type {?} */ (this._previewRect));\n            /** @type {?} */\n            const minY = boundaryRect.top + pickupY;\n            /** @type {?} */\n            const maxY = boundaryRect.bottom - (previewRect.height - pickupY);\n            /** @type {?} */\n            const minX = boundaryRect.left + pickupX;\n            /** @type {?} */\n            const maxX = boundaryRect.right - (previewRect.width - pickupX);\n            constrainedPoint.x = clamp(constrainedPoint.x, minX, maxX);\n            constrainedPoint.y = clamp(constrainedPoint.y, minY, maxY);\n        }\n        return constrainedPoint;\n    }\n    /**\n     * Updates the current drag delta, based on the user's current pointer position on the page.\n     * @private\n     * @param {?} pointerPositionOnPage\n     * @return {?}\n     */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        /** @type {?} */\n        const delta = this._pointerDirectionDelta;\n        /** @type {?} */\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        /** @type {?} */\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        /** @type {?} */\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /**\n     * Toggles the native drag interactions, based on how many handles are registered.\n     * @private\n     * @return {?}\n     */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        /** @type {?} */\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /**\n     * Removes the manually-added event listeners from the root element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @private\n     * @param {?} x New transform value along the X axis.\n     * @param {?} y New transform value along the Y axis.\n     * @return {?}\n     */\n    _applyRootElementTransform(x, y) {\n        /** @type {?} */\n        const transform = getTransform(x, y);\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        if (this._initialTransform == null) {\n            this._initialTransform = this._rootElement.style.transform || '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        this._rootElement.style.transform = this._initialTransform ?\n            transform + ' ' + this._initialTransform : transform;\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @private\n     * @param {?} currentPosition Current position of the user's pointer.\n     * @return {?}\n     */\n    _getDragDistance(currentPosition) {\n        /** @type {?} */\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /**\n     * Cleans up any cached element dimensions that we don't need after dragging has stopped.\n     * @private\n     * @return {?}\n     */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     * @private\n     * @return {?}\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        /** @type {?} */\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        /** @type {?} */\n        const elementRect = this._rootElement.getBoundingClientRect();\n        /** @type {?} */\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        /** @type {?} */\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        /** @type {?} */\n        const topOverflow = boundaryRect.top - elementRect.top;\n        /** @type {?} */\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param {?} x Desired position of the element along the X axis.\n * @param {?} y Desired position of the element along the Y axis.\n * @return {?}\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/**\n * Creates a deep clone of an element.\n * @param {?} node\n * @return {?}\n */\nfunction deepCloneNode(node) {\n    /** @type {?} */\n    const clone = (/** @type {?} */ (node.cloneNode(true)));\n    /** @type {?} */\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    /** @type {?} */\n    const descendantCanvases = node.querySelectorAll('canvas');\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    // `cloneNode` won't transfer the content of `canvas` elements so we have to do it ourselves.\n    // We match up the cloned canvas to their sources using their index in the DOM.\n    if (descendantCanvases.length) {\n        /** @type {?} */\n        const cloneCanvases = clone.querySelectorAll('canvas');\n        for (let i = 0; i < descendantCanvases.length; i++) {\n            /** @type {?} */\n            const correspondingCloneContext = cloneCanvases[i].getContext('2d');\n            if (correspondingCloneContext) {\n                correspondingCloneContext.drawImage(descendantCanvases[i], 0, 0);\n            }\n        }\n    }\n    return clone;\n}\n/**\n * Clamps a value between a minimum and a maximum.\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * Helper to remove an element from the DOM and to do all the necessary null checks.\n * @param {?} element Element to be removed.\n * @return {?}\n */\nfunction removeElement(element) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n/**\n * Determines whether an event is a touch event.\n * @param {?} event\n * @return {?}\n */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the element into which the drag preview should be inserted.\n * @param {?} documentRef\n * @return {?}\n */\nfunction getPreviewInsertionPoint(documentRef) {\n    // We can't use the body if the user is in fullscreen mode,\n    // because the preview will render under the fullscreen element.\n    // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n    return documentRef.fullscreenElement ||\n        documentRef.webkitFullscreenElement ||\n        documentRef.mozFullScreenElement ||\n        documentRef.msFullscreenElement ||\n        documentRef.body;\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n * @param {?} viewRef\n * @param {?} _document\n * @return {?}\n */\nfunction getRootNode(viewRef, _document) {\n    /** @type {?} */\n    const rootNode = viewRef.rootNodes[0];\n    if (rootNode.nodeType !== _document.ELEMENT_NODE) {\n        /** @type {?} */\n        const wrapper = _document.createElement('div');\n        wrapper.appendChild(rootNode);\n        return wrapper;\n    }\n    return (/** @type {?} */ (rootNode));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Moves an item one index in an array to another.\n * @template T\n * @param {?} array Array in which to move the item.\n * @param {?} fromIndex Starting index of the item.\n * @param {?} toIndex Index to which the item should be moved.\n * @return {?}\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    /** @type {?} */\n    const from = clamp$1(fromIndex, array.length - 1);\n    /** @type {?} */\n    const to = clamp$1(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    /** @type {?} */\n    const target = array[from];\n    /** @type {?} */\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @template T\n * @param {?} currentArray Array from which to transfer the item.\n * @param {?} targetArray Array into which to put the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n * @return {?}\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    const from = clamp$1(currentIndex, currentArray.length - 1);\n    /** @type {?} */\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @template T\n * @param {?} currentArray Array from which to copy the item.\n * @param {?} targetArray Array into which is copy the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n *\n * @return {?}\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/**\n * Clamps a number between zero and a maximum.\n * @param {?} value\n * @param {?} max\n * @return {?}\n */\nfunction clamp$1(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique ids for drop refs.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n * @type {?}\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n * @type {?}\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Number of pixels to scroll for each frame when auto-scrolling an element.\n * The value comes from trying it out manually until it feels right.\n * @type {?}\n */\nconst AUTO_SCROLL_STEP = 2;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n * \\@docs-private\n * @template T\n */\nclass DropListRef {\n    /**\n     * @param {?} element\n     * @param {?} _dragDropRegistry\n     * @param {?} _document\n     * @param {?=} _ngZone\n     * @param {?=} _viewportRuler\n     */\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /**\n         * Unique ID for the drop list.\n         * @deprecated No longer being used. To be removed.\n         * \\@breaking-change 8.0.0\n         */\n        this.id = `cdk-drop-list-ref-${_uniqueIdCounter++}`;\n        /**\n         * Whether starting a dragging sequence from this container is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Whether sorting items within the list is disabled.\n         */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = (/**\n         * @return {?}\n         */\n        () => true);\n        /**\n         * Emits right before dragging has started.\n         */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is swapping items while actively dragging.\n         */\n        this.sorted = new Subject();\n        /**\n         * Whether an item in the list is being dragged.\n         */\n        this._isDragging = false;\n        /**\n         * Cache of the dimensions of all the items inside the container.\n         */\n        this._itemPositions = [];\n        /**\n         * Keeps track of the container's scroll position.\n         */\n        this._scrollPosition = { top: 0, left: 0 };\n        /**\n         * Keeps track of the scroll position of the viewport.\n         */\n        this._viewportScrollPosition = { top: 0, left: 0 };\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as\n         * well as what direction the pointer was moving in when the swap occured.\n         */\n        this._previousSwap = { drag: (/** @type {?} */ (null)), delta: 0 };\n        /**\n         * Drop lists that are connected to the current one.\n         */\n        this._siblings = [];\n        /**\n         * Direction in which the list is oriented.\n         */\n        this._orientation = 'vertical';\n        /**\n         * Connected siblings that currently have a dragged item.\n         */\n        this._activeSiblings = new Set();\n        /**\n         * Layout direction of the drop list.\n         */\n        this._direction = 'ltr';\n        /**\n         * Subscription to the window being scrolled.\n         */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /**\n         * Vertical direction in which the list is currently scrolling.\n         */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /**\n         * Horizontal direction in which the list is currently scrolling.\n         */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /**\n         * Used to signal to the current auto-scroll sequence when to stop.\n         */\n        this._stopScrollTimers = new Subject();\n        /**\n         * Handles the container being scrolled. Has to be an arrow function to preserve the context.\n         */\n        this._handleScroll = (/**\n         * @return {?}\n         */\n        () => {\n            if (!this.isDragging()) {\n                return;\n            }\n            /** @type {?} */\n            const element = coerceElement(this.element);\n            this._updateAfterScroll(this._scrollPosition, element.scrollTop, element.scrollLeft);\n        });\n        /**\n         * Starts the interval that'll auto-scroll the element.\n         */\n        this._startScrollInterval = (/**\n         * @return {?}\n         */\n        () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const node = this._scrollNode;\n                if (this._verticalScrollDirection === 1 /* UP */) {\n                    incrementVerticalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\n                    incrementVerticalScroll(node, AUTO_SCROLL_STEP);\n                }\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\n                    incrementHorizontalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    incrementHorizontalScroll(node, AUTO_SCROLL_STEP);\n                }\n            }));\n        });\n        /** @type {?} */\n        const nativeNode = this.element = coerceElement(element);\n        this._shadowRoot = getShadowRoot(nativeNode) || _document;\n        _dragDropRegistry.registerDropContainer(this);\n    }\n    /**\n     * Removes the drop list functionality from the DOM element.\n     * @return {?}\n     */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._removeListeners();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = (/** @type {?} */ (null));\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /**\n     * Whether an item from this list is currently being dragged.\n     * @return {?}\n     */\n    isDragging() {\n        return this._isDragging;\n    }\n    /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    start() {\n        /** @type {?} */\n        const element = coerceElement(this.element);\n        this.beforeStarted.next();\n        this._isDragging = true;\n        this._cacheItems();\n        this._siblings.forEach((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._startReceiving(this)));\n        this._removeListeners();\n        // @breaking-change 9.0.0 Remove check for _ngZone once it's marked as a required param.\n        if (this._ngZone) {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => element.addEventListener('scroll', this._handleScroll)));\n        }\n        else {\n            element.addEventListener('scroll', this._handleScroll);\n        }\n        // @breaking-change 9.0.0 Remove check for _viewportRuler once it's marked as a required param.\n        if (this._viewportRuler) {\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    enter(item, pointerX, pointerY) {\n        this.start();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        /** @type {?} */\n        let newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n        if (newIndex === -1) {\n            // We use the coordinates of where the item entered the drop\n            // zone to figure out at which index it should be inserted.\n            newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n        }\n        /** @type {?} */\n        const activeDraggables = this._activeDraggables;\n        /** @type {?} */\n        const currentIndex = activeDraggables.indexOf(item);\n        /** @type {?} */\n        const placeholder = item.getPlaceholderElement();\n        /** @type {?} */\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            /** @type {?} */\n            const element = newPositionReference.getRootElement();\n            (/** @type {?} */ (element.parentElement)).insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed.\n        this._cacheItemPositions();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * \\@breaking-change 9.0.0 `distance` parameter to become required.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param {?=} distance Distance the user has dragged since the start of the dragging sequence.\n     * @return {?}\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer, distance = { x: 0, y: 0 }) {\n        this._reset();\n        this.dropped.next({\n            item,\n            currentIndex,\n            previousIndex: previousContainer.getItemIndex(item),\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} items Items that are a part of this list.\n     * @return {THIS}\n     */\n    withItems(items) {\n        (/** @type {?} */ (this))._draggables = items;\n        items.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item._withDropContainer((/** @type {?} */ (this)))));\n        if ((/** @type {?} */ (this)).isDragging()) {\n            (/** @type {?} */ (this))._cacheItems();\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the layout direction of the drop list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    withDirection(direction) {\n        (/** @type {?} */ (this))._direction = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} connectedTo Other containers that the current containers should be connected to.\n     * @return {THIS}\n     */\n    connectedTo(connectedTo) {\n        (/** @type {?} */ (this))._siblings = connectedTo.slice();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the orientation of the container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} orientation New orientation for the container.\n     * @return {THIS}\n     */\n    withOrientation(orientation) {\n        (/** @type {?} */ (this))._orientation = orientation;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    getItemIndex(item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        /** @type {?} */\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl' ?\n            this._itemPositions.slice().reverse() : this._itemPositions;\n        return findIndex(items, (/**\n         * @param {?} currentItem\n         * @return {?}\n         */\n        currentItem => currentItem.drag === item));\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     * @return {?}\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta Direction in which the pointer is moving along each axis.\n     * @return {?}\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled || !this._isPointerNearDropContainer(pointerX, pointerY)) {\n            return;\n        }\n        /** @type {?} */\n        const siblings = this._itemPositions;\n        /** @type {?} */\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        const currentIndex = findIndex(siblings, (/**\n         * @param {?} currentItem\n         * @return {?}\n         */\n        currentItem => currentItem.drag === item));\n        /** @type {?} */\n        const siblingAtNewPosition = siblings[newIndex];\n        /** @type {?} */\n        const currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        const newPosition = siblingAtNewPosition.clientRect;\n        /** @type {?} */\n        const delta = currentIndex > newIndex ? 1 : -1;\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        // How many pixels the item's placeholder should be offset.\n        /** @type {?} */\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        /** @type {?} */\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        /** @type {?} */\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item\n        });\n        siblings.forEach((/**\n         * @param {?} sibling\n         * @param {?} index\n         * @return {?}\n         */\n        (sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            /** @type {?} */\n            const isDraggedItem = sibling.drag === item;\n            /** @type {?} */\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            /** @type {?} */\n            const elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\n                sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = `translate3d(${Math.round(sibling.offset)}px, 0, 0)`;\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = `translate3d(0, ${Math.round(sibling.offset)}px, 0)`;\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        }));\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param {?} pointerX User's pointer position along the x axis.\n     * @param {?} pointerY User's pointer position along the y axis.\n     * @return {?}\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        /** @type {?} */\n        let scrollNode;\n        /** @type {?} */\n        let verticalScrollDirection = 0 /* NONE */;\n        /** @type {?} */\n        let horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling the container.\n        if (this._isPointerNearDropContainer(pointerX, pointerY)) {\n            /** @type {?} */\n            const element = coerceElement(this.element);\n            [verticalScrollDirection, horizontalScrollDirection] =\n                getElementScrollDirections(element, this._clientRect, pointerX, pointerY);\n            if (verticalScrollDirection || horizontalScrollDirection) {\n                scrollNode = element;\n            }\n        }\n        // @breaking-change 9.0.0 Remove null check for _viewportRuler once it's a required parameter.\n        // Otherwise check if we can start scrolling the viewport.\n        if (this._viewportRuler && !verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            /** @type {?} */\n            const clientRect = { width, height, top: 0, right: width, bottom: height, left: 0 };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||\n            horizontalScrollDirection !== this._horizontalScrollDirection ||\n            scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                // @breaking-change 9.0.0 Remove null check for `_ngZone` once it is made required.\n                if (this._ngZone) {\n                    this._ngZone.runOutsideAngular(this._startScrollInterval);\n                }\n                else {\n                    this._startScrollInterval();\n                }\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /**\n     * Stops any currently-running auto-scroll sequences.\n     * @return {?}\n     */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /**\n     * Caches the position of the drop list.\n     * @private\n     * @return {?}\n     */\n    _cacheOwnPosition() {\n        /** @type {?} */\n        const element = coerceElement(this.element);\n        this._clientRect = getMutableClientRect(element);\n        this._scrollPosition = { top: element.scrollTop, left: element.scrollLeft };\n    }\n    /**\n     * Refreshes the position cache of the items and sibling containers.\n     * @private\n     * @return {?}\n     */\n    _cacheItemPositions() {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables.map((/**\n         * @param {?} drag\n         * @return {?}\n         */\n        drag => {\n            /** @type {?} */\n            const elementToMeasure = this._dragDropRegistry.isDragging(drag) ?\n                // If the element is being dragged, we have to measure the\n                // placeholder, because the element is hidden.\n                drag.getPlaceholderElement() :\n                drag.getRootElement();\n            return { drag, offset: 0, clientRect: getMutableClientRect(elementToMeasure) };\n        })).sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => {\n            return isHorizontal ? a.clientRect.left - b.clientRect.left :\n                a.clientRect.top - b.clientRect.top;\n        }));\n    }\n    /**\n     * Resets the container to its initial state.\n     * @private\n     * @return {?}\n     */\n    _reset() {\n        this._isDragging = false;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item.getRootElement().style.transform = ''));\n        this._siblings.forEach((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._stopReceiving(this)));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._stopScrolling();\n        this._removeListeners();\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @private\n     * @param {?} currentIndex Index of the item currently being dragged.\n     * @param {?} siblings All of the items in the list.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        const currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        /** @type {?} */\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            /** @type {?} */\n            const start = isHorizontal ? 'left' : 'top';\n            /** @type {?} */\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Checks whether the pointer coordinates are close to the drop container.\n     * @private\n     * @param {?} pointerX Coordinates along the X axis.\n     * @param {?} pointerY Coordinates along the Y axis.\n     * @return {?}\n     */\n    _isPointerNearDropContainer(pointerX, pointerY) {\n        const { top, right, bottom, left, width, height } = this._clientRect;\n        /** @type {?} */\n        const xThreshold = width * DROP_PROXIMITY_THRESHOLD;\n        /** @type {?} */\n        const yThreshold = height * DROP_PROXIMITY_THRESHOLD;\n        return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\n            pointerX > left - xThreshold && pointerX < right + xThreshold;\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @private\n     * @param {?} currentPosition Current position of the item.\n     * @param {?} newPosition Position of the item where the current item should be moved.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        let itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\n            newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal ? newPosition.width - currentPosition.width :\n                newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @private\n     * @param {?} item Item that is being sorted.\n     * @param {?} pointerX Position of the user's pointer along the X axis.\n     * @param {?} pointerY Position of the user's pointer along the Y axis.\n     * @param {?=} delta Direction in which the user is moving their pointer.\n     * @return {?}\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        return findIndex(this._itemPositions, (/**\n         * @param {?} __0\n         * @param {?} _\n         * @param {?} array\n         * @return {?}\n         */\n        ({ drag, clientRect }, _, array) => {\n            if (drag === item) {\n                // If there's only one item left in the container, it must be\n                // the dragged item itself so we use it as a reference.\n                return array.length < 2;\n            }\n            if (delta) {\n                /** @type {?} */\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, and they didn't change\n                // the direction in which they're dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag && direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal ?\n                // Round these down since most browsers report client rects with\n                // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                pointerX >= Math.floor(clientRect.left) && pointerX <= Math.floor(clientRect.right) :\n                pointerY >= Math.floor(clientRect.top) && pointerY <= Math.floor(clientRect.bottom);\n        }));\n    }\n    /**\n     * Caches the current items in the list and their positions.\n     * @private\n     * @return {?}\n     */\n    _cacheItems() {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheOwnPosition();\n    }\n    /**\n     * Updates the internal state of the container after a scroll event has happened.\n     * @private\n     * @param {?} scrollPosition Object that is keeping track of the scroll position.\n     * @param {?} newTop New top scroll position.\n     * @param {?} newLeft New left scroll position.\n     * @param {?=} extraClientRect Extra `ClientRect` object that should be updated, in addition to the\n     *  ones of the drag items. Useful when the viewport has been scrolled and we also need to update\n     *  the `ClientRect` of the list.\n     * @return {?}\n     */\n    _updateAfterScroll(scrollPosition, newTop, newLeft, extraClientRect) {\n        /** @type {?} */\n        const topDifference = scrollPosition.top - newTop;\n        /** @type {?} */\n        const leftDifference = scrollPosition.left - newLeft;\n        if (extraClientRect) {\n            adjustClientRect(extraClientRect, topDifference, leftDifference);\n        }\n        // Since we know the amount that the user has scrolled we can shift all of the client rectangles\n        // ourselves. This is cheaper than re-measuring everything and we can avoid inconsistent\n        // behavior where we might be measuring the element before its position has changed.\n        this._itemPositions.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ clientRect }) => {\n            adjustClientRect(clientRect, topDifference, leftDifference);\n        }));\n        // We need two loops for this, because we want all of the cached\n        // positions to be up-to-date before we re-sort the item.\n        this._itemPositions.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ drag }) => {\n            if (this._dragDropRegistry.isDragging(drag)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                drag._sortFromLastPointerPosition();\n            }\n        }));\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n    }\n    /**\n     * Removes the event listeners associated with this drop list.\n     * @private\n     * @return {?}\n     */\n    _removeListeners() {\n        coerceElement(this.element).removeEventListener('scroll', this._handleScroll);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param {?} x Pointer position along the X axis.\n     * @param {?} y Pointer position along the Y axis.\n     * @return {?}\n     */\n    _isOverContainer(x, y) {\n        return isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._canReceive(item, x, y)));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param {?} item Item that is being dragged into the list.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    _canReceive(item, x, y) {\n        if (!this.enterPredicate(item, this) || !isInsideClientRect(this._clientRect, x, y)) {\n            return false;\n        }\n        /** @type {?} */\n        const elementFromPoint = (/** @type {?} */ (this._shadowRoot.elementFromPoint(x, y)));\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        /** @type {?} */\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param {?} sibling Sibling in which dragging has started.\n     * @return {?}\n     */\n    _startReceiving(sibling) {\n        /** @type {?} */\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling)) {\n            activeSiblings.add(sibling);\n            this._cacheOwnPosition();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param {?} sibling Sibling whose dragging has stopped.\n     * @return {?}\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     * @private\n     * @return {?}\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollPosition = (/** @type {?} */ (this._viewportRuler)).getViewportScrollPosition();\n        this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.isDragging()) {\n                /** @type {?} */\n                const newPosition = (/** @type {?} */ (this._viewportRuler)).getViewportScrollPosition();\n                this._updateAfterScroll(this._viewportScrollPosition, newPosition.top, newPosition.left, this._clientRect);\n            }\n            else if (this.isReceiving()) {\n                this._cacheOwnPosition();\n            }\n        }));\n    }\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param {?} clientRect `ClientRect` that should be updated.\n * @param {?} top Amount to add to the `top` position.\n * @param {?} left Amount to add to the `left` position.\n * @return {?}\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Finds the index of an item that matches a predicate function. Used as an equivalent\n * of `Array.prototype.findIndex` which isn't part of the standard Google typings.\n * @template T\n * @param {?} array Array in which to look for matches.\n * @param {?} predicate Function used to determine whether an item is a match.\n * @return {?}\n */\nfunction findIndex(array, predicate) {\n    for (let i = 0; i < array.length; i++) {\n        if (predicate(array[i], i, array)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param {?} clientRect ClientRect that is being checked.\n * @param {?} x Coordinates along the X axis.\n * @param {?} y Coordinates along the Y axis.\n * @return {?}\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Gets a mutable version of an element's bounding `ClientRect`.\n * @param {?} element\n * @return {?}\n */\nfunction getMutableClientRect(element) {\n    /** @type {?} */\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height\n    };\n}\n/**\n * Increments the vertical scroll position of a node.\n * @param {?} node Node whose scroll position should change.\n * @param {?} amount Amount of pixels that the `node` should be scrolled.\n * @return {?}\n */\nfunction incrementVerticalScroll(node, amount) {\n    if (node === window) {\n        ((/** @type {?} */ (node))).scrollBy(0, amount);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        ((/** @type {?} */ (node))).scrollTop += amount;\n    }\n}\n/**\n * Increments the horizontal scroll position of a node.\n * @param {?} node Node whose scroll position should change.\n * @param {?} amount Amount of pixels that the `node` should be scrolled.\n * @return {?}\n */\nfunction incrementHorizontalScroll(node, amount) {\n    if (node === window) {\n        ((/** @type {?} */ (node))).scrollBy(amount, 0);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        ((/** @type {?} */ (node))).scrollLeft += amount;\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param {?} clientRect Dimensions of the node.\n * @param {?} pointerY Position of the user's pointer along the y axis.\n * @return {?}\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    /** @type {?} */\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param {?} clientRect Dimensions of the node.\n * @param {?} pointerX Position of the user's pointer along the x axis.\n * @return {?}\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    /** @type {?} */\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param {?} element Element for which we should calculate the scroll direction.\n * @param {?} clientRect Bounding client rectangle of the element.\n * @param {?} pointerX Position of the user's pointer along the x axis.\n * @param {?} pointerY Position of the user's pointer along the y axis.\n * @return {?}\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    /** @type {?} */\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    /** @type {?} */\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    /** @type {?} */\n    let verticalScrollDirection = 0 /* NONE */;\n    /** @type {?} */\n    let horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        /** @type {?} */\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        /** @type {?} */\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n/**\n * Gets the shadow root of an element, if any.\n * @param {?} element\n * @return {?}\n */\nfunction getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        /** @type {?} */\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        if (rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Event options that can be used to bind an active, capturing event.\n * @type {?}\n */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * \\@docs-private\n * @template I, C\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _document\n     */\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /**\n         * Registered drop container instances.\n         */\n        this._dropInstances = new Set();\n        /**\n         * Registered drag item instances.\n         */\n        this._dragInstances = new Set();\n        /**\n         * Drag item instances that are currently being dragged.\n         */\n        this._activeDragInstances = new Set();\n        /**\n         * Keeps track of the event listeners that we've bound to the `document`.\n         */\n        this._globalListeners = new Map();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._activeDragInstances.size) {\n                event.preventDefault();\n            }\n        });\n        this._document = _document;\n    }\n    /**\n     * Adds a drop container to the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            if (this.getDropContainer(drop.id)) {\n                throw Error(`Drop instance with id \"${drop.id}\" has already been registered.`);\n            }\n            this._dropInstances.add(drop);\n        }\n    }\n    /**\n     * Adds a drag item instance to the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n            }));\n        }\n    }\n    /**\n     * Removes a drop container from the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /**\n     * Removes a drag item instance from the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param {?} drag Drag instance which is being dragged.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.has(drag)) {\n            return;\n        }\n        this._activeDragInstances.add(drag);\n        if (this._activeDragInstances.size === 1) {\n            /** @type {?} */\n            const isTouchEvent = event.type.startsWith('touch');\n            /** @type {?} */\n            const moveEvent = isTouchEvent ? 'touchmove' : 'mousemove';\n            /** @type {?} */\n            const upEvent = isTouchEvent ? 'touchend' : 'mouseup';\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(moveEvent, {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.pointerMove.next((/** @type {?} */ (e)))),\n                options: activeCapturingEventOptions\n            })\n                .set(upEvent, {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.pointerUp.next((/** @type {?} */ (e)))),\n                options: true\n            })\n                .set('scroll', {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.scroll.next(e)),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions\n            });\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                this._globalListeners.forEach((/**\n                 * @param {?} config\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                }));\n            }));\n        }\n    }\n    /**\n     * Stops dragging a drag item instance.\n     * @param {?} drag\n     * @return {?}\n     */\n    stopDragging(drag) {\n        this._activeDragInstances.delete(drag);\n        if (this._activeDragInstances.size === 0) {\n            this._clearGlobalListeners();\n        }\n    }\n    /**\n     * Gets whether a drag item instance is currently being dragged.\n     * @param {?} drag\n     * @return {?}\n     */\n    isDragging(drag) {\n        return this._activeDragInstances.has(drag);\n    }\n    /**\n     * Gets a drop container by its id.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 8.0.0\n     * @param {?} id\n     * @return {?}\n     */\n    getDropContainer(id) {\n        return Array.from(this._dropInstances).find((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        instance => instance.id === id));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dragInstances.forEach((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        instance => this.removeDragItem(instance)));\n        this._dropInstances.forEach((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        instance => this.removeDropContainer(instance)));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /**\n     * Clears out the global event listeners from the `document`.\n     * @private\n     * @return {?}\n     */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((/**\n         * @param {?} config\n         * @param {?} name\n         * @return {?}\n         */\n        (config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        }));\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = function DragDropRegistry_Factory(t) { return new (t || DragDropRegistry)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nDragDropRegistry.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DragDropRegistry, factory: DragDropRegistry.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nDragDropRegistry.ctorParameters = () => [\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ DragDropRegistry.ngInjectableDef = ɵɵdefineInjectable({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: DragDropRegistry, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DragDropRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default configuration to be used when creating a `DragRef`.\n * @type {?}\n */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    /**\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?} _dragDropRegistry\n     */\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @template T\n     * @param {?} element Element to which to attach the dragging functionality.\n     * @param {?=} config Object used to configure the dragging behavior.\n     * @return {?}\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @template T\n     * @param {?} element Element to which to attach the drop list functionality.\n     * @return {?}\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = function DragDrop_Factory(t) { return new (t || DragDrop)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DragDropRegistry)); };\nDragDrop.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DragDrop, factory: DragDrop.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nDragDrop.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewportRuler },\n    { type: DragDropRegistry }\n];\n/** @nocollapse */ DragDrop.ngInjectableDef = ɵɵdefineInjectable({ factory: function DragDrop_Factory() { return new DragDrop(ɵɵinject(DOCUMENT), ɵɵinject(NgZone), ɵɵinject(ViewportRuler), ɵɵinject(DragDropRegistry)); }, token: DragDrop, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DragDrop, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.ViewportRuler }, { type: DragDropRegistry }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that is used to provide a CdkDropList instance to CdkDrag.\n * Used for avoiding circular imports.\n * @type {?}\n */\nconst CDK_DROP_LIST = new InjectionToken('CDK_DROP_LIST');\n/**\n * Injection token that is used to provide a CdkDropList instance to CdkDrag.\n * Used for avoiding circular imports.\n * @deprecated Use `CDK_DROP_LIST` instead.\n * \\@breaking-change 8.0.0\n * @type {?}\n */\nconst CDK_DROP_LIST_CONTAINER = CDK_DROP_LIST;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Handle that can be used to drag and CdkDrag instance.\n */\nclass CdkDragHandle {\n    /**\n     * @param {?} element\n     * @param {?=} parentDrag\n     */\n    constructor(element, parentDrag) {\n        this.element = element;\n        /**\n         * Emits when the state of the handle has changed.\n         */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        this._parentDrag = parentDrag;\n        toggleNativeDragInteractions(element.nativeElement, false);\n    }\n    /**\n     * Whether starting to drag through this handle is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = function CdkDragHandle_Factory(t) { return new (t || CdkDragHandle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 8)); };\nCdkDragHandle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkDragHandle, selectors: [[\"\", \"cdkDragHandle\", \"\"]], hostAttrs: [1, \"cdk-drag-handle\"], inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] } });\n/** @nocollapse */\nCdkDragHandle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_PARENT,] }, { type: Optional }] }\n];\nCdkDragHandle.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDragHandleDisabled',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkDragHandle, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDragHandle]',\n                host: {\n                    'class': 'cdk-drag-handle'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DRAG_PARENT]\n            }, {\n                type: Optional\n            }] }]; }, { disabled: [{\n            type: Input,\n            args: ['cdkDragHandleDisabled']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n * @template T\n */\nclass CdkDragPlaceholder {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = function CdkDragPlaceholder_Factory(t) { return new (t || CdkDragPlaceholder)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPlaceholder.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkDragPlaceholder, selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]], inputs: { data: \"data\" } });\n/** @nocollapse */\nCdkDragPlaceholder.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPlaceholder.propDecorators = {\n    data: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkDragPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPlaceholder]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { data: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n * @template T\n */\nclass CdkDragPreview {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPreview.ɵfac = function CdkDragPreview_Factory(t) { return new (t || CdkDragPreview)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPreview.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkDragPreview, selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]], inputs: { data: \"data\" } });\n/** @nocollapse */\nCdkDragPreview.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPreview.propDecorators = {\n    data: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkDragPreview, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPreview]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { data: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to configure the behavior of `CdkDrag`.\n * @type {?}\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG', {\n    providedIn: 'root',\n    factory: CDK_DRAG_CONFIG_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction CDK_DRAG_CONFIG_FACTORY() {\n    return { dragStartThreshold: 5, pointerDirectionChangeThreshold: 5 };\n}\n/**\n * Element that can be moved inside a CdkDropList container.\n * @template T\n */\nclass CdkDrag {\n    /**\n     * @param {?} element\n     * @param {?} dropContainer\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewContainerRef\n     * @param {?} config\n     * @param {?} _dir\n     * @param {?} dragDrop\n     * @param {?} _changeDetectorRef\n     */\n    constructor(element, dropContainer, _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._destroyed = new Subject();\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new EventEmitter();\n        /**\n         * Emits when the user has released a drag item, before any animations have started.\n         */\n        this.released = new EventEmitter();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new EventEmitter();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const subscription = this._dragRef.moved.pipe(map((/**\n             * @param {?} movedEvent\n             * @return {?}\n             */\n            movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance\n            })))).subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n            });\n        }));\n        this._dragRef = dragDrop.createDrag(element, config);\n        this._dragRef.data = this;\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /**\n     * Selector that will be used to determine the element to which the draggable's position will\n     * be constrained. Matching starts from the element's parent and goes up the DOM until a matching\n     * element has been found\n     * @deprecated Use `boundaryElement` instead.\n     * \\@breaking-change 9.0.0\n     * @return {?}\n     */\n    get boundaryElementSelector() {\n        return typeof this.boundaryElement === 'string' ? this.boundaryElement : (/** @type {?} */ (undefined));\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    set boundaryElementSelector(selector) {\n        this.boundaryElement = selector;\n    }\n    /**\n     * Whether starting to drag this element is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     * @return {?}\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to wait for the zone to stabilize, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position and then they get transferred to the portal.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._updateRootElement();\n            // Listen for any newly-added handles.\n            this._handles.changes.pipe(startWith(this._handles), \n            // Sync the new handles with the DragRef.\n            tap((/**\n             * @param {?} handles\n             * @return {?}\n             */\n            (handles) => {\n                /** @type {?} */\n                const childHandleElements = handles\n                    .filter((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => handle._parentDrag === this))\n                    .map((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => handle.element));\n                this._dragRef.withHandles(childHandleElements);\n            })), \n            // Listen if the state of any of the handles changes.\n            switchMap((/**\n             * @param {?} handles\n             * @return {?}\n             */\n            (handles) => {\n                return merge(...handles.map((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                item => item._stateChanges)));\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} handleInstance\n             * @return {?}\n             */\n            handleInstance => {\n                // Enabled/disable the handle that changed in the DragRef.\n                /** @type {?} */\n                const dragRef = this._dragRef;\n                /** @type {?} */\n                const handle = handleInstance.element.nativeElement;\n                handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n            }));\n            if (this.freeDragPosition) {\n                this._dragRef.setFreeDragPosition(this.freeDragPosition);\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const rootSelectorChange = changes['rootElementSelector'];\n        /** @type {?} */\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n    }\n    /**\n     * Syncs the root element with the `DragRef`.\n     * @private\n     * @return {?}\n     */\n    _updateRootElement() {\n        /** @type {?} */\n        const element = this.element.nativeElement;\n        /** @type {?} */\n        const rootElement = this.rootElementSelector ?\n            getClosestMatchingAncestor(element, this.rootElementSelector) : element;\n        if (rootElement && rootElement.nodeType !== this._document.ELEMENT_NODE) {\n            throw Error(`cdkDrag must be attached to an element node. ` +\n                `Currently attached to \"${rootElement.nodeName}\".`);\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /**\n     * Gets the boundary element, based on the `boundaryElement` value.\n     * @private\n     * @return {?}\n     */\n    _getBoundaryElement() {\n        /** @type {?} */\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return getClosestMatchingAncestor(this.element.nativeElement, boundary);\n        }\n        /** @type {?} */\n        const element = coerceElement(boundary);\n        if (isDevMode() && !element.contains(this.element.nativeElement)) {\n            throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');\n        }\n        return element;\n    }\n    /**\n     * Syncs the inputs of the CdkDrag with the options of the underlying DragRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (!ref.isDragging()) {\n                /** @type {?} */\n                const dir = this._dir;\n                /** @type {?} */\n                const placeholder = this._placeholderTemplate ? {\n                    template: this._placeholderTemplate.templateRef,\n                    context: this._placeholderTemplate.data,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                /** @type {?} */\n                const preview = this._previewTemplate ? {\n                    template: this._previewTemplate.templateRef,\n                    context: this._previewTemplate.data,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay = coerceNumberProperty(this.dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview);\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        }));\n    }\n    /**\n     * Handles the events from the underlying `DragRef`.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _handleEvents(ref) {\n        ref.started.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.started.emit({ source: this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.released.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.released.emit({ source: this });\n        }));\n        ref.ended.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.ended.emit({ source: this, distance: event.distance });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.entered.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.entered.emit({\n                container: event.container.data,\n                item: this,\n                currentIndex: event.currentIndex\n            });\n        }));\n        ref.exited.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.exited.emit({\n                container: event.container.data,\n                item: this\n            });\n        }));\n        ref.dropped.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: this,\n                distance: event.distance\n            });\n        }));\n    }\n}\nCdkDrag.ɵfac = function CdkDrag_Factory(t) { return new (t || CdkDrag)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST, 12), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nCdkDrag.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkDrag, selectors: [[\"\", \"cdkDrag\", \"\"]], contentQueries: function CdkDrag_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragPreview, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragPlaceholder, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragHandle, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previewTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._handles = _t);\n    } }, hostAttrs: [1, \"cdk-drag\"], hostVars: 4, hostBindings: function CdkDrag_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n    } }, inputs: { dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], disabled: [\"cdkDragDisabled\", \"disabled\"], data: [\"cdkDragData\", \"data\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, exportAs: [\"cdkDrag\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]), ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkDrag.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DROP_LIST,] }, { type: Optional }, { type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_CONFIG,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: DragDrop },\n    { type: ChangeDetectorRef }\n];\nCdkDrag.propDecorators = {\n    _handles: [{ type: ContentChildren, args: [CdkDragHandle, { descendants: true },] }],\n    _previewTemplate: [{ type: ContentChild, args: [CdkDragPreview, { static: false },] }],\n    _placeholderTemplate: [{ type: ContentChild, args: [CdkDragPlaceholder, { static: false },] }],\n    data: [{ type: Input, args: ['cdkDragData',] }],\n    lockAxis: [{ type: Input, args: ['cdkDragLockAxis',] }],\n    rootElementSelector: [{ type: Input, args: ['cdkDragRootElement',] }],\n    boundaryElement: [{ type: Input, args: ['cdkDragBoundary',] }],\n    dragStartDelay: [{ type: Input, args: ['cdkDragStartDelay',] }],\n    freeDragPosition: [{ type: Input, args: ['cdkDragFreeDragPosition',] }],\n    disabled: [{ type: Input, args: ['cdkDragDisabled',] }],\n    constrainPosition: [{ type: Input, args: ['cdkDragConstrainPosition',] }],\n    started: [{ type: Output, args: ['cdkDragStarted',] }],\n    released: [{ type: Output, args: ['cdkDragReleased',] }],\n    ended: [{ type: Output, args: ['cdkDragEnded',] }],\n    entered: [{ type: Output, args: ['cdkDragEntered',] }],\n    exited: [{ type: Output, args: ['cdkDragExited',] }],\n    dropped: [{ type: Output, args: ['cdkDragDropped',] }],\n    moved: [{ type: Output, args: ['cdkDragMoved',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkDrag, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDrag]',\n                exportAs: 'cdkDrag',\n                host: {\n                    'class': 'cdk-drag',\n                    '[class.cdk-drag-disabled]': 'disabled',\n                    '[class.cdk-drag-dragging]': '_dragRef.isDragging()'\n                },\n                providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DROP_LIST]\n            }, {\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }]; }, { dragStartDelay: [{\n            type: Input,\n            args: ['cdkDragStartDelay']\n        }], started: [{\n            type: Output,\n            args: ['cdkDragStarted']\n        }], released: [{\n            type: Output,\n            args: ['cdkDragReleased']\n        }], ended: [{\n            type: Output,\n            args: ['cdkDragEnded']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDragEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDragExited']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDragDropped']\n        }], moved: [{\n            type: Output,\n            args: ['cdkDragMoved']\n        }], boundaryElement: [{\n            type: Input,\n            args: ['cdkDragBoundary']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDragDisabled']\n        }], _handles: [{\n            type: ContentChildren,\n            args: [CdkDragHandle, { descendants: true }]\n        }], _previewTemplate: [{\n            type: ContentChild,\n            args: [CdkDragPreview, { static: false }]\n        }], _placeholderTemplate: [{\n            type: ContentChild,\n            args: [CdkDragPlaceholder, { static: false }]\n        }], data: [{\n            type: Input,\n            args: ['cdkDragData']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDragLockAxis']\n        }], rootElementSelector: [{\n            type: Input,\n            args: ['cdkDragRootElement']\n        }], freeDragPosition: [{\n            type: Input,\n            args: ['cdkDragFreeDragPosition']\n        }], constrainPosition: [{\n            type: Input,\n            args: ['cdkDragConstrainPosition']\n        }] }); })();\n/**\n * Gets the closest ancestor of an element that matches a selector.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction getClosestMatchingAncestor(element, selector) {\n    /** @type {?} */\n    let currentElement = (/** @type {?} */ (element.parentElement));\n    while (currentElement) {\n        // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\n        if (currentElement.matches ? currentElement.matches(selector) :\n            ((/** @type {?} */ (currentElement))).msMatchesSelector(selector)) {\n            return currentElement;\n        }\n        currentElement = currentElement.parentElement;\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n * @template T\n */\nclass CdkDropListGroup {\n    constructor() {\n        /**\n         * Drop lists registered inside the group.\n         */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /**\n     * Whether starting a dragging sequence from inside this group is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = function CdkDropListGroup_Factory(t) { return new (t || CdkDropListGroup)(); };\nCdkDropListGroup.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkDropListGroup, selectors: [[\"\", \"cdkDropListGroup\", \"\"]], inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, exportAs: [\"cdkDropListGroup\"] });\nCdkDropListGroup.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDropListGroupDisabled',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkDropListGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropListGroup]',\n                exportAs: 'cdkDropListGroup'\n            }]\n    }], function () { return []; }, { disabled: [{\n            type: Input,\n            args: ['cdkDropListGroupDisabled']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique ids for drop zones.\n * @type {?}\n */\nlet _uniqueIdCounter$1 = 0;\nconst ɵ0 = undefined;\n// @breaking-change 8.0.0 `CdkDropList` implements `CdkDropListContainer` for backwards\n// compatiblity. The implements clause, as well as all the methods that it enforces can\n// be removed when `CdkDropListContainer` is deleted.\n/**\n * Container that wraps a set of draggable items.\n * @template T\n */\nclass CdkDropList {\n    /**\n     * @param {?} element\n     * @param {?} dragDrop\n     * @param {?} _changeDetectorRef\n     * @param {?=} _dir\n     * @param {?=} _group\n     */\n    constructor(element, dragDrop, _changeDetectorRef, _dir, _group) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._group = _group;\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Direction in which the list is oriented.\n         */\n        this.orientation = 'vertical';\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter$1++}`;\n        this._disabled = false;\n        this._sortingDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = (/**\n         * @return {?}\n         */\n        () => true);\n        /**\n         * Whether to auto-scroll the view when the user moves their pointer close to the edges.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits as the user is swapping items while actively dragging.\n         */\n        this.sorted = new EventEmitter();\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        this._dropListRef.enterPredicate = (/**\n         * @param {?} drag\n         * @param {?} drop\n         * @return {?}\n         */\n        (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        });\n        this._syncInputs(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /**\n     * Whether starting a dragging sequence from this container is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether sorting within this drop list is disabled.\n     * @return {?}\n     */\n    get sortingDisabled() { return this._sortingDisabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set sortingDisabled(value) {\n        this._sortingDisabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._draggables.changes\n            .pipe(startWith(this._draggables), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} items\n         * @return {?}\n         */\n        (items) => {\n            this._dropListRef.withItems(items.map((/**\n             * @param {?} drag\n             * @return {?}\n             */\n            drag => drag._dragRef)));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    start() {\n        this._dropListRef.start();\n    }\n    /**\n     * Drops an item into this container.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @return {?}\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer) {\n        this._dropListRef.drop(item._dragRef, currentIndex, ((/** @type {?} */ (previousContainer)))._dropListRef, isPointerOverContainer);\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    enter(item, pointerX, pointerY) {\n        this._dropListRef.enter(item._dragRef, pointerX, pointerY);\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    exit(item) {\n        this._dropListRef.exit(item._dragRef);\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    getItemIndex(item) {\n        return this._dropListRef.getItemIndex(item._dragRef);\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta Direction in which the pointer is moving along each axis.\n     * @return {?}\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        return this._dropListRef._sortItem(item._dragRef, pointerX, pointerY, pointerDelta);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        /** @type {?} */\n        const result = this._dropListRef._getSiblingContainerFromPosition(item._dragRef, x, y);\n        return result ? result.data : null;\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param {?} x Pointer position along the X axis.\n     * @param {?} y Pointer position along the Y axis.\n     * @return {?}\n     */\n    _isOverContainer(x, y) {\n        return this._dropListRef._isOverContainer(x, y);\n    }\n    /**\n     * Syncs the inputs of the CdkDropList with the options of the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _syncInputs(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => ref.withDirection(value)));\n        }\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const siblings = coerceArray(this.connectedTo).map((/**\n             * @param {?} drop\n             * @return {?}\n             */\n            drop => {\n                return typeof drop === 'string' ?\n                    (/** @type {?} */ (CdkDropList._dropLists.find((/**\n                     * @param {?} list\n                     * @return {?}\n                     */\n                    list => list.id === drop)))) : drop;\n            }));\n            if (this._group) {\n                this._group._items.forEach((/**\n                 * @param {?} drop\n                 * @return {?}\n                 */\n                drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                }));\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = this.sortingDisabled;\n            ref.autoScrollDisabled = this.autoScrollDisabled;\n            ref\n                .connectedTo(siblings.filter((/**\n             * @param {?} drop\n             * @return {?}\n             */\n            drop => drop && drop !== this)).map((/**\n             * @param {?} list\n             * @return {?}\n             */\n            list => list._dropListRef)))\n                .withOrientation(this.orientation);\n        }));\n    }\n    /**\n     * Handles events from the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.entered.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex\n            });\n        }));\n        ref.exited.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data\n            });\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.sorted.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data\n            });\n        }));\n        ref.dropped.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n}\nCdkDropList.ɵfac = function CdkDropList_Factory(t) { return new (t || CdkDropList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(CdkDropListGroup, 12)); };\nCdkDropList.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkDropList, selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]], contentQueries: function CdkDropList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDrag, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._draggables = _t);\n    } }, hostAttrs: [1, \"cdk-drop-list\"], hostVars: 7, hostBindings: function CdkDropList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n    } }, inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], id: \"id\", enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], data: [\"cdkDropListData\", \"data\"], lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, exportAs: [\"cdkDropList\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CdkDropListGroup, useValue: ɵ0 },\n            { provide: CDK_DROP_LIST_CONTAINER, useExisting: CdkDropList },\n        ])] });\n/**\n * Keeps track of the drop lists that are currently on the page.\n */\nCdkDropList._dropLists = [];\n/** @nocollapse */\nCdkDropList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: CdkDropListGroup, decorators: [{ type: Optional }, { type: SkipSelf }] }\n];\nCdkDropList.propDecorators = {\n    _draggables: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => CdkDrag)), {\n                    // Explicitly set to false since some of the logic below makes assumptions about it.\n                    // The `.withItems` call below should be updated if we ever need to switch this to `true`.\n                    descendants: false\n                },] }],\n    connectedTo: [{ type: Input, args: ['cdkDropListConnectedTo',] }],\n    data: [{ type: Input, args: ['cdkDropListData',] }],\n    orientation: [{ type: Input, args: ['cdkDropListOrientation',] }],\n    id: [{ type: Input }],\n    lockAxis: [{ type: Input, args: ['cdkDropListLockAxis',] }],\n    disabled: [{ type: Input, args: ['cdkDropListDisabled',] }],\n    sortingDisabled: [{ type: Input, args: ['cdkDropListSortingDisabled',] }],\n    enterPredicate: [{ type: Input, args: ['cdkDropListEnterPredicate',] }],\n    autoScrollDisabled: [{ type: Input, args: ['cdkDropListAutoScrollDisabled',] }],\n    dropped: [{ type: Output, args: ['cdkDropListDropped',] }],\n    entered: [{ type: Output, args: ['cdkDropListEntered',] }],\n    exited: [{ type: Output, args: ['cdkDropListExited',] }],\n    sorted: [{ type: Output, args: ['cdkDropListSorted',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkDropList, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropList], cdk-drop-list',\n                exportAs: 'cdkDropList',\n                providers: [\n                    // Prevent child drop lists from picking up the same group as their parent.\n                    { provide: CdkDropListGroup, useValue: ɵ0 },\n                    { provide: CDK_DROP_LIST_CONTAINER, useExisting: CdkDropList },\n                ],\n                host: {\n                    'class': 'cdk-drop-list',\n                    '[id]': 'id',\n                    '[class.cdk-drop-list-disabled]': 'disabled',\n                    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: CdkDropListGroup, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }]; }, { connectedTo: [{\n            type: Input,\n            args: ['cdkDropListConnectedTo']\n        }], orientation: [{\n            type: Input,\n            args: ['cdkDropListOrientation']\n        }], id: [{\n            type: Input\n        }], enterPredicate: [{\n            type: Input,\n            args: ['cdkDropListEnterPredicate']\n        }], autoScrollDisabled: [{\n            type: Input,\n            args: ['cdkDropListAutoScrollDisabled']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDropListDropped']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDropListEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDropListExited']\n        }], sorted: [{\n            type: Output,\n            args: ['cdkDropListSorted']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDropListDisabled']\n        }], sortingDisabled: [{\n            type: Input,\n            args: ['cdkDropListSortingDisabled']\n        }], _draggables: [{\n            type: ContentChildren,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => CdkDrag)), {\n                    // Explicitly set to false since some of the logic below makes assumptions about it.\n                    // The `.withItems` call below should be updated if we ever need to switch this to `true`.\n                    descendants: false\n                }]\n        }], data: [{\n            type: Input,\n            args: ['cdkDropListData']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDropListLockAxis']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DragDropModule {\n}\nDragDropModule.ɵfac = function DragDropModule_Factory(t) { return new (t || DragDropModule)(); };\nDragDropModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DragDropModule });\nDragDropModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        DragDrop,\n    ] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DragDropModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                exports: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                providers: [\n                    DragDrop,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragDropModule, { declarations: [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder], exports: [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DragDrop, DragRef, DropListRef, CdkDropList, CDK_DROP_LIST, CDK_DROP_LIST_CONTAINER, moveItemInArray, transferArrayItem, copyArrayItem, DragDropModule, DragDropRegistry, CdkDropListGroup, CDK_DRAG_CONFIG_FACTORY, CDK_DRAG_CONFIG, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder, CDK_DRAG_PARENT as ɵb };\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Inject, Injectable, Optional, PLATFORM_ID, NgModule, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = (typeof Intl !== 'undefined' && ((/** @type {?} */ (Intl))).v8BreakIterator);\n}\ncatch (_a) {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    /**\n     * \\@breaking-change 8.0.0 remove optional decorator\n     * @param {?=} _platformId\n     */\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        /**\n         * Whether the Angular application is being rendered in the browser.\n         * We want to use the Angular platform check because if the Document is shimmed\n         * without the navigator, the following checks will fail. This is preferred because\n         * sometimes the Document may be shimmed without the user's knowledge or intention\n         */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /**\n         * Whether the current browser is Microsoft Edge.\n         */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Microsoft Trident.\n         */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Blink.\n         */\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        this.BLINK = this.isBrowser && (!!(((/** @type {?} */ (window))).chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        /**\n         * Whether the current rendering engine is WebKit.\n         */\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /**\n         * Whether the current platform is Apple iOS.\n         */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !('MSStream' in window);\n        /**\n         * Whether the current browser is Firefox.\n         */\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /**\n         * Whether the current platform is Android.\n         */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        /**\n         * Whether the current browser is Safari.\n         */\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = function Platform_Factory(t) { return new (t || Platform)(ɵngcc0.ɵɵinject(PLATFORM_ID, 8)); };\nPlatform.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: Platform, factory: Platform.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nPlatform.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_ID,] }] }\n];\n/** @nocollapse */ Platform.ngInjectableDef = ɵɵdefineInjectable({ factory: function Platform_Factory() { return new Platform(ɵɵinject(PLATFORM_ID, 8)); }, token: Platform, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Platform, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Object, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PlatformModule {\n}\nPlatformModule.ɵfac = function PlatformModule_Factory(t) { return new (t || PlatformModule)(); };\nPlatformModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: PlatformModule });\nPlatformModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PlatformModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Cached result Set of input types support by the current browser.\n * @type {?}\n */\nlet supportedInputTypes;\n/**\n * Types of `<input>` that *might* be supported.\n * @type {?}\n */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    /** @type {?} */\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter((/**\n     * @param {?} value\n     * @return {?}\n     */\n    value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    })));\n    return supportedInputTypes;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Cached result of whether the user's browser supports passive event listeners.\n * @type {?}\n */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n * @return {?}\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', (/** @type {?} */ (null)), Object.defineProperty({}, 'passive', {\n                get: (/**\n                 * @return {?}\n                 */\n                () => supportsPassiveEvents = true)\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param {?} options Object to be normalized.\n * @return {?}\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\nconst RtlScrollAxisType = {\n    /**\n     * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n     * all the way right.\n     */\n    NORMAL: 0,\n    /**\n     * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    NEGATED: 1,\n    /**\n     * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    INVERTED: 2,\n};\nRtlScrollAxisType[RtlScrollAxisType.NORMAL] = 'NORMAL';\nRtlScrollAxisType[RtlScrollAxisType.NEGATED] = 'NEGATED';\nRtlScrollAxisType[RtlScrollAxisType.INVERTED] = 'INVERTED';\n/**\n * Cached result of the way the browser handles the horizontal scroll axis in RTL mode.\n * @type {?}\n */\nlet rtlScrollAxisType;\n/**\n * Check whether the browser supports scroll behaviors.\n * @return {?}\n */\nfunction supportsScrollBehavior() {\n    return !!(typeof document == 'object' && 'scrollBehavior' in (/** @type {?} */ (document.documentElement)).style);\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n * @return {?}\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return RtlScrollAxisType.NORMAL;\n    }\n    if (!rtlScrollAxisType) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        /** @type {?} */\n        const scrollContainer = document.createElement('div');\n        /** @type {?} */\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.height = '1px';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        /** @type {?} */\n        const content = document.createElement('div');\n        /** @type {?} */\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n        }\n        (/** @type {?} */ (scrollContainer.parentNode)).removeChild(scrollContainer);\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nlet shadowDomIsSupported;\n/**\n * Checks whether the user's browser support Shadow DOM.\n * @return {?}\n */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        /** @type {?} */\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (((/** @type {?} */ (head))).createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Platform, PlatformModule, getSupportedInputTypes, supportsPassiveEventListeners, normalizePassiveListenerOptions, supportsScrollBehavior, getRtlScrollAxisType, RtlScrollAxisType, _supportsShadowDom };\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Directive, forwardRef, Input, Injectable, NgZone, Optional, SkipSelf, ElementRef, NgModule, IterableDiffers, TemplateRef, ViewContainerRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, Output, ViewChild, ViewEncapsulation, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Subject, fromEvent, of, Observable, animationFrameScheduler, asapScheduler, merge } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, shareReplay, switchMap } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, RtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { ArrayDataSource, isDataSource } from '@angular/cdk/collections';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The injection token used to specify the virtual scrolling strategy.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\n\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Virtual scrolling strategy for lists with items of known fixed size.\n */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /**\n         * \\@docs-private Implemented as part of VirtualScrollStrategy.\n         */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /**\n         * The attached viewport.\n         */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     * @return {?}\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentRendered() { }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onRenderedOffsetChanged() { }\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /**\n     * Update the viewport's total content size.\n     * @private\n     * @return {?}\n     */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /**\n     * Update the viewport's rendered range.\n     * @private\n     * @return {?}\n     */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        /** @type {?} */\n        const scrollOffset = this._viewport.measureScrollOffset();\n        /** @type {?} */\n        const firstVisibleIndex = scrollOffset / this._itemSize;\n        /** @type {?} */\n        const renderedRange = this._viewport.getRenderedRange();\n        /** @type {?} */\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        /** @type {?} */\n        const viewportSize = this._viewport.getViewportSize();\n        /** @type {?} */\n        const dataLength = this._viewport.getDataLength();\n        /** @type {?} */\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            /** @type {?} */\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            /** @type {?} */\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                /** @type {?} */\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param {?} fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n * @return {?}\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/**\n * A virtual scroll strategy that supports fixed-size items.\n */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /**\n         * The scroll strategy used by this directive.\n         */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /**\n     * The size of the items in the list (in pixels).\n     * @return {?}\n     */\n    get itemSize() { return this._itemSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     * @return {?}\n     */\n    get minBufferPx() { return this._minBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     * @return {?}\n     */\n    get maxBufferPx() { return this._maxBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) { return new (t || CdkFixedSizeVirtualScroll)(); };\nCdkFixedSizeVirtualScroll.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFixedSizeVirtualScroll, selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]], inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(( /**\n                         * @return {?}\n                         */() => CdkFixedSizeVirtualScroll))]\n            }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFixedSizeVirtualScroll.propDecorators = {\n    itemSize: [{ type: Input }],\n    minBufferPx: [{ type: Input }],\n    maxBufferPx: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef(( /**\n                                 * @return {?}\n                                 */() => CdkFixedSizeVirtualScroll))]\n                    }]\n            }]\n    }], function () { return []; }, { itemSize: [{\n            type: Input\n        }], minBufferPx: [{\n            type: Input\n        }], maxBufferPx: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the scrolling events by default.\n * @type {?}\n */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     */\n    constructor(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * Subject for notifying that a registered scrollable reference element has been scrolled.\n         */\n        this._scrolled = new Subject();\n        /**\n         * Keeps track of the global `scroll` and `resize` subscriptions.\n         */\n        this._globalSubscription = null;\n        /**\n         * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n         */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next(scrollable))));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    deregister(scrollable) {\n        /** @type {?} */\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            /** @type {?} */\n            const subscription = auditTimeInMs > 0 ?\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            });\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((/**\n         * @param {?} _\n         * @param {?} container\n         * @return {?}\n         */\n        (_, container) => this.deregister(container)));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n    ancestorScrolled(elementRef, auditTimeInMs) {\n        /** @type {?} */\n        const ancestors = this.getAncestorScrollContainers(elementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter((/**\n         * @param {?} target\n         * @return {?}\n         */\n        target => {\n            return !target || ancestors.indexOf(target) > -1;\n        })));\n    }\n    /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    getAncestorScrollContainers(elementRef) {\n        /** @type {?} */\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((/**\n         * @param {?} _subscription\n         * @param {?} scrollable\n         * @return {?}\n         */\n        (_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        }));\n        return scrollingContainers;\n    }\n    /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @private\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    _scrollableContainsElement(scrollable, elementRef) {\n        /** @type {?} */\n        let element = elementRef.nativeElement;\n        /** @type {?} */\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = (/** @type {?} */ (element)).parentElement);\n        return false;\n    }\n    /**\n     * Sets up the global scroll listeners.\n     * @private\n     * @return {?}\n     */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return fromEvent(window.document, 'scroll').subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next()));\n        }));\n    }\n    /**\n     * Cleans up the global scroll listener.\n     * @private\n     * @return {?}\n     */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) { return new (t || ScrollDispatcher)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nScrollDispatcher.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ScrollDispatcher, factory: ScrollDispatcher.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nScrollDispatcher.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform }\n];\n/** @nocollapse */ ScrollDispatcher.ngInjectableDef = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform)); }, token: ScrollDispatcher, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }]; }, null); })();\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @param {?} platform\n * @return {?}\n */\nfunction SCROLL_DISPATCHER_PROVIDER_FACTORY(parentDispatcher, ngZone, platform) {\n    return parentDispatcher || new ScrollDispatcher(ngZone, platform);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst SCROLL_DISPATCHER_PROVIDER = {\n    // If there is already a ScrollDispatcher available, use that. Otherwise, provide a new one.\n    provide: ScrollDispatcher,\n    deps: [[new Optional(), new SkipSelf(), ScrollDispatcher], NgZone, Platform],\n    useFactory: SCROLL_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     * @param {?=} dir\n     */\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n            .subscribe(observer)))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /**\n     * Gets the ElementRef for the viewport.\n     * @return {?}\n     */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} options specified the offsets to scroll to.\n     * @return {?}\n     */\n    scrollTo(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        options.left = options.left == null ? (isRtl ? options.end : options.start) : options.left;\n        options.right = options.right == null ? (isRtl ? options.start : options.end) : options.right;\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            ((/** @type {?} */ (options))).top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n            if (options.left != null) {\n                ((/** @type {?} */ (options))).right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                ((/** @type {?} */ (options))).left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    /**\n     * @private\n     * @param {?} options\n     * @return {?}\n     */\n    _applyScrollToOptions(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} from The edge to measure from.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        /** @type {?} */\n        const LEFT = 'left';\n        /** @type {?} */\n        const RIGHT = 'right';\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.ɵfac = function CdkScrollable_Factory(t) { return new (t || CdkScrollable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nCdkScrollable.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkScrollable, selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]] });\n/** @nocollapse */\nCdkScrollable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkScrollable, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScrollDispatcher }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Checks if the given ranges are equal.\n * @param {?} r1\n * @param {?} r2\n * @return {?}\n */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n * @type {?}\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/**\n * A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`.\n */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} ngZone\n     * @param {?} _scrollStrategy\n     * @param {?} dir\n     * @param {?} scrollDispatcher\n     */\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /**\n         * Emits when the viewport is detached from a CdkVirtualForOf.\n         */\n        this._detachedSubject = new Subject();\n        /**\n         * Emits when the rendered range changes.\n         */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /**\n         * Emits when the index of the first element visible in the viewport changes.\n         */\n        this.scrolledIndexChange = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this._scrollStrategy.scrolledIndexChange.subscribe((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => this.ngZone.run((/**\n         * @return {?}\n         */\n        () => observer.next(index)))))))));\n        /**\n         * A stream that emits whenever the rendered range changes.\n         */\n        this.renderedRangeStream = this._renderedRangeSubject.asObservable();\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /**\n         * A string representing the `style.width` property value to be used for the spacer element.\n         */\n        this._totalContentWidth = '';\n        /**\n         * A string representing the `style.height` property value to be used for the spacer element.\n         */\n        this._totalContentHeight = '';\n        /**\n         * The currently rendered range of indices.\n         */\n        this._renderedRange = { start: 0, end: 0 };\n        /**\n         * The length of the data bound to this viewport (in number of items).\n         */\n        this._dataLength = 0;\n        /**\n         * The size of the viewport (in pixels).\n         */\n        this._viewportSize = 0;\n        /**\n         * The last rendered content offset that was set.\n         */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /**\n         * Whether there is a pending change detection cycle.\n         */\n        this._isChangeDetectionPending = false;\n        /**\n         * A list of functions to run after the next change detection cycle.\n         */\n        this._runAfterChangeDetection = [];\n        if (!_scrollStrategy) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n    }\n    /**\n     * The direction the viewport scrolls.\n     * @return {?}\n     */\n    get orientation() {\n        return this._orientation;\n    }\n    /**\n     * @param {?} orientation\n     * @return {?}\n     */\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith((/** @type {?} */ (null))), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentScrolled()));\n            this._markChangeDetectionNeeded();\n        }))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        super.ngOnDestroy();\n    }\n    /**\n     * Attaches a `CdkVirtualForOf` to this viewport.\n     * @param {?} forOf\n     * @return {?}\n     */\n    attach(forOf) {\n        if (this._forOf) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            data => {\n                /** @type {?} */\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            }));\n        }));\n    }\n    /**\n     * Detaches the current `CdkVirtualForOf`.\n     * @return {?}\n     */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /**\n     * Gets the length of the data bound to this viewport (in number of items).\n     * @return {?}\n     */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /**\n     * Gets the size of the viewport (in pixels).\n     * @return {?}\n     */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /**\n     * Get the current rendered range of items.\n     * @return {?}\n     */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     * @param {?} size\n     * @return {?}\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /**\n     * Sets the currently rendered range of indices.\n     * @param {?} range\n     * @return {?}\n     */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentRendered()));\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     * @return {?}\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     * @param {?} offset\n     * @param {?=} to\n     * @return {?}\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        /** @type {?} */\n        const isHorizontal = this.orientation == 'horizontal';\n        /** @type {?} */\n        const axis = isHorizontal ? 'X' : 'Y';\n        /** @type {?} */\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        /** @type {?} */\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            }));\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param {?} offset The offset to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        /** @type {?} */\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param {?=} from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        return super.measureScrollOffset(from ? from : this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /**\n     * Measure the combined size of all of the rendered items.\n     * @return {?}\n     */\n    measureRenderedContentSize() {\n        /** @type {?} */\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     * @param {?} range\n     * @return {?}\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /**\n     * Update the viewport dimensions and re-render.\n     * @return {?}\n     */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /**\n     * Measure the viewport size.\n     * @private\n     * @return {?}\n     */\n    _measureViewportSize() {\n        /** @type {?} */\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /**\n     * Queue up change detection to run.\n     * @private\n     * @param {?=} runAfter\n     * @return {?}\n     */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._doChangeDetection();\n            }))));\n        }\n    }\n    /**\n     * Run change detection.\n     * @private\n     * @return {?}\n     */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        /** @type {?} */\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /**\n     * Calculates the `style.width` and `style.height` for the spacer element.\n     * @private\n     * @return {?}\n     */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) { return new (t || CdkVirtualScrollViewport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher)); };\nCdkVirtualScrollViewport.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkVirtualScrollViewport, selectors: [[\"cdk-virtual-scroll-viewport\"]], viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n    } }, hostAttrs: [1, \"cdk-virtual-scroll-viewport\"], hostVars: 4, hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n    } }, inputs: { orientation: \"orientation\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkScrollable,\n                useExisting: CdkVirtualScrollViewport\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 4, consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]], template: function CdkVirtualScrollViewport_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n    } }, styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:0}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:0}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nCdkVirtualScrollViewport.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ScrollDispatcher }\n];\nCdkVirtualScrollViewport.propDecorators = {\n    orientation: [{ type: Input }],\n    scrolledIndexChange: [{ type: Output }],\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\n        type: Component,\n        args: [{ selector: 'cdk-virtual-scroll-viewport', template: \"<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\"><ng-content></ng-content></div><div class=\\\"cdk-virtual-scroll-spacer\\\" [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\", host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n                }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport\n                    }], styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:0}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:0}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [VIRTUAL_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ScrollDispatcher }]; }, { scrolledIndexChange: [{\n            type: Output\n        }], orientation: [{\n            type: Input\n        }], _contentWrapper: [{\n            type: ViewChild,\n            args: ['contentWrapper', { static: true }]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Helper to extract size from a DOM Node.\n * @param {?} orientation\n * @param {?} node\n * @return {?}\n */\nfunction getSize(orientation, node) {\n    /** @type {?} */\n    const el = (/** @type {?} */ (node));\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    /** @type {?} */\n    const rect = el.getBoundingClientRect();\n    return orientation == 'horizontal' ? rect.width : rect.height;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n * @template T\n */\nclass CdkVirtualForOf {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?} _template\n     * @param {?} _differs\n     * @param {?} _viewport\n     * @param {?} ngZone\n     */\n    constructor(_viewContainerRef, _template, _differs, _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewport = _viewport;\n        /**\n         * Emits when the rendered view of the data changes.\n         */\n        this.viewChange = new Subject();\n        /**\n         * Subject that emits when a new DataSource instance is given.\n         */\n        this._dataSourceChanges = new Subject();\n        /**\n         * The size of the cache used to store templates that are not being used for re-use later.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n         */\n        this.cdkVirtualForTemplateCacheSize = 20;\n        /**\n         * Emits whenever the data in the current DataSource changes.\n         */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith((/** @type {?} */ (null))), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([prev, cur]) => this._changeDataSource(prev, cur))), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /**\n         * The differ used to calculate changes to the data.\n         */\n        this._differ = null;\n        /**\n         * The template cache used to hold on ot template instancess that have been stamped out, but don't\n         * currently need to be rendered. These instances will be reused in the future rather than\n         * stamping out brand new ones.\n         */\n        this._templateCache = [];\n        /**\n         * Whether the rendered data should be updated during the next ngDoCheck cycle.\n         */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        }));\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} range\n         * @return {?}\n         */\n        range => {\n            this._renderedRange = range;\n            ngZone.run((/**\n             * @return {?}\n             */\n            () => this.viewChange.next(this._renderedRange)));\n            this._onRenderedDataChange();\n        }));\n        this._viewport.attach(this);\n    }\n    /**\n     * The DataSource to display.\n     * @return {?}\n     */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        /** @type {?} */\n        const ds = isDataSource(value) ? value :\n            // Slice the value if its an NgIterable to ensure we're working with an array.\n            new ArrayDataSource(value instanceof Observable ? value : Array.prototype.slice.call(value || []));\n        this._dataSourceChanges.next(ds);\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     * @return {?}\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn ?\n            (/**\n             * @param {?} index\n             * @param {?} item\n             * @return {?}\n             */\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)) :\n            undefined;\n    }\n    /**\n     * The template used to stamp out new elements.\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     * @param {?} range\n     * @param {?} orientation\n     * @return {?}\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        /** @type {?} */\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        /** @type {?} */\n        const rangeLen = range.end - range.start;\n        // Loop over all root nodes for all items in the range and sum up their size.\n        /** @type {?} */\n        let totalSize = 0;\n        /** @type {?} */\n        let i = rangeLen;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i + renderedStartIndex)));\n            /** @type {?} */\n            let j = view ? view.rootNodes.length : 0;\n            while (j--) {\n                totalSize += getSize(orientation, (/** @type {?} */ (view)).rootNodes[j]);\n            }\n        }\n        return totalSize;\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            /** @type {?} */\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next();\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        for (let view of this._templateCache) {\n            view.destroy();\n        }\n    }\n    /**\n     * React to scroll state changes in the viewport.\n     * @private\n     * @return {?}\n     */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n        }\n        this._needsUpdate = true;\n    }\n    /**\n     * Swap out one `DataSource` for another.\n     * @private\n     * @param {?} oldDs\n     * @param {?} newDs\n     * @return {?}\n     */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /**\n     * Update the `CdkVirtualForOfContext` for all views.\n     * @private\n     * @return {?}\n     */\n    _updateContext() {\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            let view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /**\n     * Apply changes to the DOM.\n     * @private\n     * @param {?} changes\n     * @return {?}\n     */\n    _applyChanges(changes) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} adjustedPreviousIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, adjustedPreviousIndex, currentIndex) => {\n            if (record.previousIndex == null) { // Item added.\n                // Item added.\n                /** @type {?} */\n                const view = this._insertViewForNewItem((/** @type {?} */ (currentIndex)));\n                view.context.$implicit = record.item;\n            }\n            else if (currentIndex == null) { // Item removed.\n                this._cacheView(this._detachView((/** @type {?} */ (adjustedPreviousIndex))));\n            }\n            else { // Item moved.\n                // Item moved.\n                /** @type {?} */\n                const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (adjustedPreviousIndex)))));\n                this._viewContainerRef.move(view, currentIndex);\n                view.context.$implicit = record.item;\n            }\n        }));\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (record.currentIndex)))));\n            view.context.$implicit = record.item;\n        }));\n        // Update the context variables on all items.\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /**\n     * Cache the given detached view.\n     * @private\n     * @param {?} view\n     * @return {?}\n     */\n    _cacheView(view) {\n        if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n            this._templateCache.push(view);\n        }\n        else {\n            /** @type {?} */\n            const index = this._viewContainerRef.indexOf(view);\n            // It's very unlikely that the index will ever be -1, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                this._viewContainerRef.remove(index);\n            }\n        }\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new one.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewForNewItem(index) {\n        return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);\n    }\n    /**\n     * Update the computed properties on the `CdkVirtualForOfContext`.\n     * @private\n     * @param {?} context\n     * @return {?}\n     */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    /**\n     * Creates a new embedded view and moves it to the given index\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createEmbeddedViewAt(index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return this._viewContainerRef.createEmbeddedView(this._template, {\n            $implicit: (/** @type {?} */ (null)),\n            cdkVirtualForOf: this._cdkVirtualForOf,\n            index: -1,\n            count: -1,\n            first: false,\n            last: false,\n            odd: false,\n            even: false\n        }, index);\n    }\n    /**\n     * Inserts a recycled view from the cache at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewFromCache(index) {\n        /** @type {?} */\n        const cachedView = this._templateCache.pop();\n        if (cachedView) {\n            this._viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n    /**\n     * Detaches the embedded view at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _detachView(index) {\n        return (/** @type {?} */ (this._viewContainerRef.detach(index)));\n    }\n}\nCdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) { return new (t || CdkVirtualForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkVirtualForOf.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkVirtualForOf, selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]], inputs: { cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\", cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\" } });\n/** @nocollapse */\nCdkVirtualForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n    { type: NgZone }\n];\nCdkVirtualForOf.propDecorators = {\n    cdkVirtualForOf: [{ type: Input }],\n    cdkVirtualForTrackBy: [{ type: Input }],\n    cdkVirtualForTemplate: [{ type: Input }],\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkVirtualForOf, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: CdkVirtualScrollViewport, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.NgZone }]; }, { cdkVirtualForTemplateCacheSize: [{\n            type: Input\n        }], cdkVirtualForOf: [{\n            type: Input\n        }], cdkVirtualForTrackBy: [{\n            type: Input\n        }], cdkVirtualForTemplate: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScrollingModule {\n}\nScrollingModule.ɵfac = function ScrollingModule_Factory(t) { return new (t || ScrollingModule)(); };\nScrollingModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ScrollingModule });\nScrollingModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [BidiModule, PlatformModule, BidiModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PlatformModule],\n                exports: [\n                    BidiModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkScrollable,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkScrollable,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollingModule, { declarations: function () { return [CdkFixedSizeVirtualScroll, CdkScrollable, CdkVirtualForOf, CdkVirtualScrollViewport]; }, imports: function () { return [BidiModule, PlatformModule]; }, exports: function () { return [BidiModule, CdkFixedSizeVirtualScroll, CdkScrollable, CdkVirtualForOf, CdkVirtualScrollViewport]; } }); })();\n/**\n * @deprecated ScrollDispatchModule has been renamed to ScrollingModule.\n * \\@breaking-change 8.0.0 delete this alias\n */\nclass ScrollDispatchModule {\n}\nScrollDispatchModule.ɵfac = function ScrollDispatchModule_Factory(t) { return new (t || ScrollDispatchModule)(); };\nScrollDispatchModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ScrollDispatchModule });\nScrollDispatchModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [ScrollingModule, ScrollingModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollDispatchModule, [{\n        type: NgModule,\n        args: [{\n                imports: [ScrollingModule],\n                exports: [ScrollingModule]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollDispatchModule, { imports: [ScrollingModule], exports: [ScrollingModule] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the resize events by default.\n * @type {?}\n */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * \\@docs-private\n */\nclass ViewportRuler {\n    /**\n     * @param {?} _platform\n     * @param {?} ngZone\n     */\n    constructor(_platform, ngZone) {\n        this._platform = _platform;\n        ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._change = _platform.isBrowser ?\n                merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange')) :\n                of();\n            // Note that we need to do the subscription inside `runOutsideAngular`\n            // since subscribing is what causes the event listener to be added.\n            this._invalidateCache = this.change().subscribe((/**\n             * @return {?}\n             */\n            () => this._updateViewportSize()));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._invalidateCache.unsubscribe();\n    }\n    /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        /** @type {?} */\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = (/** @type {?} */ (null));\n        }\n        return output;\n    }\n    /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        /** @type {?} */\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        /** @type {?} */\n        const documentElement = (/** @type {?} */ (document.documentElement));\n        /** @type {?} */\n        const documentRect = documentElement.getBoundingClientRect();\n        /** @type {?} */\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        /** @type {?} */\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime Time in milliseconds to throttle the stream.\n     * @return {?}\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /**\n     * Updates the cached viewport size.\n     * @private\n     * @return {?}\n     */\n    _updateViewportSize() {\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    }\n}\nViewportRuler.ɵfac = function ViewportRuler_Factory(t) { return new (t || ViewportRuler)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nViewportRuler.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ViewportRuler, factory: ViewportRuler.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nViewportRuler.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ ViewportRuler.ngInjectableDef = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: ViewportRuler, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ViewportRuler, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentRuler\n * @param {?} platform\n * @param {?} ngZone\n * @return {?}\n */\nfunction VIEWPORT_RULER_PROVIDER_FACTORY(parentRuler, platform, ngZone) {\n    return parentRuler || new ViewportRuler(platform, ngZone);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst VIEWPORT_RULER_PROVIDER = {\n    // If there is already a ViewportRuler available, use that. Otherwise, provide a new one.\n    provide: ViewportRuler,\n    deps: [[new Optional(), new SkipSelf(), ViewportRuler], Platform, NgZone],\n    useFactory: VIEWPORT_RULER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { _fixedSizeVirtualScrollStrategyFactory, FixedSizeVirtualScrollStrategy, CdkFixedSizeVirtualScroll, SCROLL_DISPATCHER_PROVIDER_FACTORY, DEFAULT_SCROLL_TIME, ScrollDispatcher, SCROLL_DISPATCHER_PROVIDER, CdkScrollable, ScrollingModule, ScrollDispatchModule, VIEWPORT_RULER_PROVIDER_FACTORY, DEFAULT_RESIZE_TIME, ViewportRuler, VIEWPORT_RULER_PROVIDER, CdkVirtualForOf, VIRTUAL_SCROLL_STRATEGY, CdkVirtualScrollViewport };\n\n"],"names":["DOCUMENT","inject","InjectionToken","EventEmitter","Inject","Injectable","Optional","Directive","Output","Input","NgModule","ɵɵdefineInjectable","ɵɵinject","ɵngcc0","DIR_DOCUMENT","providedIn","factory","DIR_DOCUMENT_FACTORY","Directionality","constructor","_document","value","change","bodyDir","body","dir","htmlDir","documentElement","ngOnDestroy","complete","ɵfac","Directionality_Factory","t","ɵprov","token","ctorParameters","type","undefined","decorators","args","ngInjectableDef","ngDevMode","ɵsetClassMetadata","Dir","_dir","_isInitialized","old","normalizedValue","toLowerCase","_rawDir","emit","ngAfterContentInit","Dir_Factory","ɵdir","ɵɵdefineDirective","selectors","hostVars","hostBindings","Dir_HostBindings","rf","ctx","ɵɵattribute","inputs","outputs","exportAs","features","ɵɵProvidersFeature","provide","useExisting","propDecorators","selector","providers","host","BidiModule","BidiModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports","declarations","ngJitMode","ɵɵsetNgModuleScope","ɵa","ElementRef","coerceBooleanProperty","coerceNumberProperty","fallbackValue","_isNumberValue","Number","isNaN","parseFloat","coerceArray","Array","isArray","coerceCssPixelValue","coerceElement","elementOrRef","nativeElement","Observable","of","Subject","DataSource","isDataSource","connect","ArrayDataSource","_data","disconnect","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","_selection","Set","_deselectedToEmit","_selectedToEmit","changed","onChange","length","forEach","_markSelected","selected","_selected","from","values","select","_verifyValueAssignment","_emitChangeEvent","deselect","_unmarkSelected","toggle","isSelected","clear","_unmarkAll","has","isEmpty","size","hasValue","sort","predicate","isMultipleSelection","next","source","added","removed","add","push","delete","getMultipleValuesInSingleSelectionError","Error","UniqueSelectionDispatcher","_listeners","notify","id","name","listener","listen","filter","registered","UniqueSelectionDispatcher_Factory","normalizePassiveListenerOptions","_supportsShadowDom","Subscription","interval","animationFrameScheduler","merge","startWith","takeUntil","take","map","switchMap","tap","NgZone","ContentChildren","forwardRef","ChangeDetectorRef","SkipSelf","ContentChild","ViewContainerRef","isDevMode","TemplateRef","ViewportRuler","ɵngcc1","ɵngcc2","extendStyles","dest","key","hasOwnProperty","toggleNativeDragInteractions","element","enable","userSelect","style","touchAction","webkitUserDrag","webkitTapHighlightColor","msUserSelect","webkitUserSelect","MozUserSelect","parseCssTimeUnitsToMs","multiplier","indexOf","getTransformTransitionDurationInMs","computedStyle","getComputedStyle","transitionedProperties","parseCssPropertyValue","property","find","prop","propertyIndex","rawDurations","rawDelays","getPropertyValue","split","part","trim","passiveEventListenerOptions","passive","activeEventListenerOptions","MOUSE_EVENT_IGNORE_TIME","DragRef","_config","_ngZone","_viewportRuler","_dragDropRegistry","_passiveTransform","x","y","_activeTransform","_moveEvents","_pointerMoveSubscription","EMPTY","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_handles","_disabledHandles","_direction","dragStartDelay","_disabled","beforeStarted","started","released","ended","entered","exited","dropped","moved","asObservable","_pointerDown","event","targetHandle","handle","target","contains","disabled","_initializeDragSequence","_rootElement","_pointerMove","_hasStartedDragging","pointerPosition","_getPointerPositionOnPage","distanceX","Math","abs","_pickupPositionOnPage","distanceY","isOverThreshold","dragStartThreshold","isDelayElapsed","Date","now","_dragStartTime","_endDragSequence","_dropContainer","isDragging","run","_startDragSequence","_previewRect","width","height","_preview","getBoundingClientRect","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","preventDefault","_updatePointerDirectionDelta","_updateActiveDropContainer","activeTransform","_applyRootElementTransform","SVGElement","appliedTransform","setAttribute","observers","distance","_getDragDistance","delta","_pointerDirectionDelta","_pointerUp","withRootElement","registerDragItem","newValue","_toggleNativeDragInteractions","getPlaceholderElement","_placeholder","getRootElement","withHandles","handles","withPreviewTemplate","template","_previewTemplate","withPlaceholderTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","addEventListener","_initialTransform","withBoundaryElement","boundaryElement","unsubscribe","subscribe","_containInsideBoundaryOnResize","dispose","removeElement","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","_nextSibling","reset","transform","disableHandle","enableHandle","withDirection","direction","_withDropContainer","container","getFreeDragPosition","position","setFreeDragPosition","_sortFromLastPointerPosition","_pointerPositionAtLastDirectionChange","_previewRef","destroy","_placeholderRef","stopDragging","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","then","_cleanupDragArtifacts","_cleanupCachedDimensions","isTouchEvent","_lastTouchEventTime","nextSibling","preview","_createPreviewElement","placeholder","_createPlaceholderElement","display","appendChild","parentNode","replaceChild","getPreviewInsertionPoint","start","referenceElement","stopPropagation","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","draggable","_initialContainer","pointerMove","pointerUp","scroll","pipe","_scrollPosition","getViewportScrollPosition","_boundaryRect","_pickupPositionInElement","_getPointerPositionInElement","startDragging","insertBefore","currentIndex","getItemIndex","isPointerOverContainer","_isOverContainer","item","previousIndex","previousContainer","drop","newContainer","_getSiblingContainerFromPosition","exit","enter","_startScrollingIfNecessary","_sortItem","getTransform","previewConfig","previewTemplate","viewRef","viewContainer","createEmbeddedView","context","getRootNode","elementRect","deepCloneNode","left","top","pointerEvents","margin","zIndex","classList","Promise","resolve","placeholderRect","duration","runOutsideAngular","handler","propertyName","removeEventListener","clearTimeout","timeout","setTimeout","placeholderConfig","placeholderTemplate","handleElement","referenceRect","point","targetTouches","pageX","pageY","touches","changedTouches","constrainedPoint","constrainPosition","dropContainerLock","lockAxis","pickupX","pickupY","boundaryRect","previewRect","minY","maxY","bottom","minX","maxX","right","clamp","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","round","node","clone","cloneNode","descendantsWithId","querySelectorAll","descendantCanvases","removeAttribute","i","cloneCanvases","correspondingCloneContext","getContext","drawImage","min","max","removeChild","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","rootNode","rootNodes","nodeType","ELEMENT_NODE","wrapper","createElement","moveItemInArray","array","fromIndex","toIndex","clamp$1","to","transferArrayItem","currentArray","targetArray","targetIndex","splice","copyArrayItem","_uniqueIdCounter","DROP_PROXIMITY_THRESHOLD","SCROLL_PROXIMITY_THRESHOLD","AUTO_SCROLL_STEP","DropListRef","sortingDisabled","autoScrollDisabled","enterPredicate","sorted","_isDragging","_itemPositions","_viewportScrollPosition","_previousSwap","drag","_siblings","_orientation","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_handleScroll","_updateAfterScroll","scrollTop","scrollLeft","_startScrollInterval","_scrollNode","incrementVerticalScroll","incrementHorizontalScroll","nativeNode","_shadowRoot","getShadowRoot","registerDropContainer","_removeListeners","removeDropContainer","_cacheItems","sibling","_startReceiving","_listenToScrollEvents","pointerX","pointerY","newIndex","_draggables","_getItemIndexFromPointerPosition","activeDraggables","_activeDraggables","newPositionReference","parentElement","_cacheItemPositions","_reset","withItems","items","connectedTo","slice","withOrientation","orientation","reverse","findIndex","currentItem","isReceiving","pointerDelta","_isPointerNearDropContainer","siblings","isHorizontal","siblingAtNewPosition","clientRect","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","index","isDraggedItem","offset","elementToOffset","adjustClientRect","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","_clientRect","getViewportSize","getVerticalScrollDirection","getHorizontalScrollDirection","window","_cacheOwnPosition","getMutableClientRect","elementToMeasure","a","b","_stopReceiving","immediateSibling","end","xThreshold","yThreshold","_","floor","scrollPosition","newTop","newLeft","extraClientRect","topDifference","leftDifference","isInsideClientRect","_canReceive","elementFromPoint","activeSiblings","amount","scrollBy","computedVertical","computedHorizontal","scrollHeight","clientHeight","scrollWidth","clientWidth","ShadowRoot","activeCapturingEventOptions","capture","DragDropRegistry","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","Map","_preventDefaultWhileDragging","getDropContainer","startsWith","moveEvent","upEvent","set","e","options","config","_clearGlobalListeners","instance","DragDropRegistry_Factory","DEFAULT_CONFIG","DragDrop","createDrag","createDropList","DragDrop_Factory","CDK_DROP_LIST","CDK_DROP_LIST_CONTAINER","CDK_DRAG_PARENT","CdkDragHandle","parentDrag","_stateChanges","_parentDrag","CdkDragHandle_Factory","ɵɵdirectiveInject","hostAttrs","CdkDragPlaceholder","templateRef","CdkDragPlaceholder_Factory","data","CdkDragPreview","CdkDragPreview_Factory","CDK_DRAG_CONFIG","CDK_DRAG_CONFIG_FACTORY","CdkDrag","dropContainer","_viewContainerRef","dragDrop","_changeDetectorRef","_destroyed","observer","subscription","_dragRef","movedEvent","_syncInputs","_handleEvents","boundaryElementSelector","ngAfterViewInit","onStable","_updateRootElement","changes","childHandleElements","handleInstance","dragRef","freeDragPosition","ngOnChanges","rootSelectorChange","positionChange","firstChange","rootElementSelector","getClosestMatchingAncestor","nodeName","_getBoundaryElement","boundary","ref","markForCheck","CdkDrag_Factory","contentQueries","CdkDrag_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","CdkDrag_HostBindings","ɵɵclassProp","ɵɵNgOnChangesFeature","descendants","static","currentElement","matches","msMatchesSelector","CdkDropListGroup","_items","CdkDropListGroup_Factory","_uniqueIdCounter$1","ɵ0","CdkDropList","_group","_sortingDisabled","_dropListRef","_dropLists","result","list","CdkDropList_Factory","CdkDropList_ContentQueries","CdkDropList_HostBindings","ɵɵhostProperty","useValue","DragDropModule","DragDropModule_Factory","ɵb","PLATFORM_ID","isPlatformBrowser","hasV8BreakIterator","Intl","v8BreakIterator","_a","Platform","_platformId","isBrowser","document","EDGE","test","navigator","userAgent","TRIDENT","BLINK","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","Platform_Factory","Object","PlatformModule","PlatformModule_Factory","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","featureTestInput","supportsPassiveEvents","supportsPassiveEventListeners","defineProperty","get","RtlScrollAxisType","NORMAL","NEGATED","INVERTED","rtlScrollAxisType","supportsScrollBehavior","getRtlScrollAxisType","scrollContainer","containerStyle","overflow","visibility","content","contentStyle","shadowDomIsSupported","head","createShadowRoot","attachShadow","IterableDiffers","ChangeDetectionStrategy","Component","ViewChild","ViewEncapsulation","fromEvent","asapScheduler","distinctUntilChanged","auditTime","pairwise","shareReplay","_c0","_c1","VIRTUAL_SCROLL_STRATEGY","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","_viewport","_itemSize","_minBufferPx","_maxBufferPx","attach","viewport","_updateTotalContentSize","_updateRenderedRange","detach","updateItemAndBufferSize","onContentScrolled","onDataLengthChanged","onContentRendered","onRenderedOffsetChanged","scrollToIndex","behavior","scrollToOffset","setTotalContentSize","getDataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","renderedRange","getRenderedRange","newRange","viewportSize","dataLength","startBuffer","expandStart","ceil","endBuffer","expandEnd","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","_scrollStrategy","CdkFixedSizeVirtualScroll","CdkFixedSizeVirtualScroll_Factory","useFactory","deps","DEFAULT_SCROLL_TIME","ScrollDispatcher","_platform","_scrolled","_globalSubscription","_scrolledCount","scrollContainers","register","scrollable","elementScrolled","deregister","scrollableReference","scrolled","auditTimeInMs","_addGlobalListener","_removeGlobalListener","ancestorScrolled","elementRef","ancestors","getAncestorScrollContainers","scrollingContainers","_subscription","_scrollableContainsElement","scrollableElement","getElementRef","ScrollDispatcher_Factory","SCROLL_DISPATCHER_PROVIDER_FACTORY","parentDispatcher","ngZone","platform","SCROLL_DISPATCHER_PROVIDER","CdkScrollable","scrollDispatcher","_elementScrolled","ngOnInit","scrollTo","el","isRtl","_applyScrollToOptions","LEFT","RIGHT","CdkScrollable_Factory","rangesEqual","r1","r2","SCROLL_SCHEDULER","requestAnimationFrame","CdkVirtualScrollViewport","_detachedSubject","_renderedRangeSubject","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_viewportSize","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_calculateSpacerSize","_measureViewportSize","_markChangeDetectionNeeded","forOf","_forOf","dataStream","newLength","_doChangeDetection","range","getOffsetToRenderedContentStart","axis","axisDirection","_renderedContentTransform","measureRenderedContentSize","contentEl","_contentWrapper","offsetWidth","offsetHeight","measureRangeSize","checkViewportSize","viewportEl","runAfter","runAfterChangeDetection","fn","CdkVirtualScrollViewport_Factory","ɵcmp","ɵɵdefineComponent","viewQuery","CdkVirtualScrollViewport_Query","ɵɵviewQuery","CdkVirtualScrollViewport_HostBindings","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","CdkVirtualScrollViewport_Template","ɵɵprojectionDef","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵstyleProp","styles","encapsulation","changeDetection","None","OnPush","getSize","rect","CdkVirtualForOf","_template","_differs","viewChange","_dataSourceChanges","cdkVirtualForTemplateCacheSize","prev","cur","_changeDataSource","_differ","_templateCache","_needsUpdate","_onRenderedDataChange","cdkVirtualForOf","_cdkVirtualForOf","ds","prototype","call","cdkVirtualForTrackBy","_cdkVirtualForTrackBy","cdkVirtualForTemplate","renderedStartIndex","rangeLen","totalSize","view","j","ngDoCheck","diff","_renderedItems","_updateContext","_applyChanges","create","oldDs","newDs","count","_updateComputedContextProperties","detectChanges","forEachOperation","record","adjustedPreviousIndex","_insertViewForNewItem","$implicit","_cacheView","_detachView","move","forEachIdentityChange","remove","_insertViewFromCache","_createEmbeddedViewAt","last","even","odd","cachedView","pop","insert","CdkVirtualForOf_Factory","ScrollingModule","ScrollingModule_Factory","imports","ScrollDispatchModule","ScrollDispatchModule_Factory","DEFAULT_RESIZE_TIME","_change","_invalidateCache","_updateViewportSize","output","getViewportRect","documentRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","VIEWPORT_RULER_PROVIDER_FACTORY","parentRuler","VIEWPORT_RULER_PROVIDER"],"sourceRoot":"webpack:///","x_google_ignoreList":[7,8,9,10,11,12]}